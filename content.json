{"meta":{"title":"骚客.的个人博客","subtitle":"记录我的学习过程","description":"使用Hexo搭建，欢迎交流","author":"骚客.","url":"http://PrinceSaoKe.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2023-09-02T06:14:08.855Z","updated":"2023-09-02T06:14:08.855Z","comments":false,"path":"/404.html","permalink":"http://princesaoke.github.io/404.html","excerpt":"","text":""},{"title":"关于","date":"2023-09-02T06:14:08.857Z","updated":"2023-09-02T06:14:08.857Z","comments":false,"path":"about/index.html","permalink":"http://princesaoke.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"友情链接","date":"2023-09-02T06:14:08.860Z","updated":"2023-09-02T06:14:08.860Z","comments":true,"path":"links/index.html","permalink":"http://princesaoke.github.io/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2023-09-02T06:14:08.862Z","updated":"2023-09-02T06:14:08.862Z","comments":false,"path":"repository/index.html","permalink":"http://princesaoke.github.io/repository/index.html","excerpt":"","text":""},{"title":"分类","date":"2023-09-02T06:14:08.859Z","updated":"2023-09-02T06:14:08.859Z","comments":false,"path":"categories/index.html","permalink":"http://princesaoke.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2023-09-02T06:14:08.863Z","updated":"2023-09-02T06:14:08.863Z","comments":false,"path":"tags/index.html","permalink":"http://princesaoke.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Github页面美化","slug":"Github页面美化","date":"2023-09-10T12:23:58.000Z","updated":"2023-09-10T14:18:07.888Z","comments":true,"path":"2023/09/10/Github页面美化/","link":"","permalink":"http://princesaoke.github.io/2023/09/10/Github%E9%A1%B5%E9%9D%A2%E7%BE%8E%E5%8C%96/","excerpt":"","text":"本文介绍如何把你的Github首页打扮的花里胡哨，顺便说一下自己是如何将Github仓库里的项目用README.md文件介绍清楚的。 一、在Github首页展示自定义内容每个项目的根目录下的README.md文件是该项目的说明，我们在接触一个项目时要做的第一件事就是阅读这个README.md文件。 在github，每个仓库的根目录下的README.md文件中的内容会被展示在源代码下方，便于阅读。如果你将仓库名称设为自己的github昵称，系统会提示你这是一个特殊的仓库。它的README.md文件不仅会展示在仓库下方，还会被展示在该用户的github首页，这意味着我们可以在其中添加一些自我介绍，让访客可以在首页直接看到。 二、添加技术栈icon你是否在他人的github首页看到这样花花绿绿的炫酷图标： 这是用到了 shields.io 上的icon图标。进入其官网，点击 Get Started，第一个 Static Badge 就是我们要用的。看它的默认样式，可能会觉得有点眼熟，因为很多地方都有用到，比如VSCode拓展插件介绍页面常用的icon。 简单来说，你可以通过在markdown中输入url来显示icon。 对于默认的样式，在markdown文件中引入 https://img.shields.io/badge/前半部分-后半部分-blue 来显示一个icon： 参数可以修改，其中颜色可以用六位十六进制数表示： https://img.shields.io/badge/Part1-Part2-FF0000 这和我们想要的效果差的有点远，别担心，回到shields.io的页面，在下方的 Query Parameters 中说明了我们可以在url中添加参数来调整icon的样式。 style：默认为flat，改成 flat-square 变成方角 logo：显示在icon左半部分，使用图标slug引用。文档告诉我们可以在 Simple Icons slugs 中找到logo对应的值。 logoColor：logo的颜色。同样可以使用十六进制表示。 综上，我们可以实现这样的icon： https://img.shields.io/badge/-Hexo-0073AA?style=flat-square&amp;logo=hexo&amp;logoColor=ffffff 其中左半部分的文字（label）为空 剩下就是依葫芦画瓢，可以加入其他参数让icon更美观。 Github Stats","categories":[{"name":"整点花活","slug":"整点花活","permalink":"http://princesaoke.github.io/categories/%E6%95%B4%E7%82%B9%E8%8A%B1%E6%B4%BB/"}],"tags":[{"name":"Github","slug":"Github","permalink":"http://princesaoke.github.io/tags/Github/"}]},{"title":"Hexo搭建个人博客","slug":"Hexo搭建个人博客","date":"2023-09-02T03:40:09.000Z","updated":"2023-09-10T14:20:24.352Z","comments":true,"path":"2023/09/02/Hexo搭建个人博客/","link":"","permalink":"http://princesaoke.github.io/2023/09/02/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"本文介绍如何使用Hexo搭建一个个人博客。 一、安装Node.js关于安装node.js这部分，我参考的是这篇文章。 首先到node.js中文官网下载安装包。 运行安装包，修改安装路径，不勾选 necessary tools，一路next安装完毕。默认的设置是有安装npm的，这个很重要，相当于应用商店，第三方的包都通过它下载，必装。 顺便吐槽一句这个npm是真的辣鸡，明明用了淘宝镜像还是一样下载不动，然后过一会就又好了，玄学网络。而且下载完一个包也无法继续输入命令，只能关掉cmd重新打开，蠢的一批，隔壁python的pip都没有这种问题。 win+r输入cmd打开命令提示符，输入 1node -v 或 1node --version 查看node版本，如果提示“不是内部或外部命令”说明没安装成功。 npm也是一样，输入 1npm -v 查看npm版本。 二、安装Hexo成功安装node.js和npm后，继续在cmd中输入以下命令 1npm install -g hexo-cli 安装Hexo。 合理外推卸载命令就是 1npm uninstall -g hexo-cli 注意到有个-g，意思是全局安装，不加-g就是在当前文件夹局部安装，出了当前文件夹就相当于没安装，类比python的虚拟环境。 同时还有 hexo 和 hexo-cli 的区别，之前也疑惑过 vue 和 vue-cli，这个我暂时还不太明白。总之有-cli和没有是两个不同的东西。按我理解，用hexo就是把hexo整个框架都下载下来，而用hexo-cli就是只下载hexo的一些命令，用创建hexo项目的时候用命令远程拉取模板。不知道我理解的对不对。 三、创建Hexo项目cmd输入 1hexo init personal-hexo 新建hexo项目。其中personal-hexo是创建的hexo项目的名称 进入hexo项目的文件夹，一手 1npm install 安装依赖包。 再一手 1hexo server 或 1hexo s 启动hexo服务器。这时会告诉你hexo正在本地运行，打开它给的地址 http://localhost:4000/ ，就可以看到hexo的默认页面了。 四、Hexo使用指南IDE打开hexo项目，先看项目结构。根目录下，scaffolds文件夹里存放模板文件。scaffolds&#x2F;post.md 文件就是文章的模板文件，比如往里面加一条categories，新建的博文就会带上这个字段。 scaffolds&#x2F;_config.yml 文件是整个博客网站的配置文件。title就是HTML中的title，subtitle和description想填什么就填什么，author改成自己，language改成zh-CN，url改成 http:&#x2F;&#x2F;你的Github昵称.github.io ，其他暂时都不用改。 scaffolds&#x2F;source 文件夹下的是网站的主体，其中的文件夹可以通过url访问到，以下划线开头的文件夹除外。 scaffolds&#x2F;source&#x2F;_posts 中存放的即我们的博客。在终端中执行命令 1hexo new Hexo搭建个人博客 其中”Hexo搭建个人博客”是文章名。 发现 scaffolds&#x2F;source&#x2F;_posts 中多了刚才新建的文章，打开浏览器也可以看到博文创建成功了。现在可以用markdown尽情编辑博文了！ 五、更换主题我使用的是 hexo-theme-pure 主题，Github地址在这，Gitee地址在这。建议看Gitee上的，文档是中文。 第三方的主题都放在themes文件夹下。项目根目录下终端执行 1git clone https://github.com/cofess/hexo-theme-pure.git themes/pure themes&#x2F;pure&#x2F;_config.yml 是主题的配置文件。按需配置，我的配置如下： menu决定菜单中有哪些栏目。由于我没有豆瓣号，就把豆瓣书单那一栏注释掉了，这样就没有豆瓣书单这个页面。 site决定博客网站的基本配置。 根据logo中的url找到对应的图片，即博客的头像，改成自己的图片。 title就是HTML中的title favicon即浏览器标签上的图标，找到 themes&#x2F;pure&#x2F;source&#x2F;favicon.png，改成自己的图片。 board是公告，可以是HTML中的元素 configskin可以更改主题颜色，除默认的白色外还有 theme-black theme-blue theme-green theme-purple 四种。 donate文章底部请作者喝咖啡的赞赏部分。我不喜欢，enable改成false就不显示了。要保留的话按对应路径找到图片替换成自己的。 share文章底部的分享部分。sites是电脑网页显示的，mobile_sites是手机网页端显示的，可以加的值有 qq,wechat,qzone,weibo,facebook,twitter repositoryplatform有github和gitee两种，username填你对应托管平台的用户名。 pv用于统计你的网站有多少访客。提供了不蒜子和leancloud两种方式，我用的是不蒜子，把busuanzi下的enable设为true。 postCount统计你每一篇文章的字数和阅读时间。要开启哪一个功能就把对应的值设为true，enable为true则这两个功能都失效。 profile一些个人资料。按前面的方法自行配置就好了。 复制_source把 themes&#x2F;pure&#x2F;_source里的所有文件夹（除去你前面menu那里注释掉的界面，比如我不需要豆瓣书单，books文件夹就不需要复制）复制到根目录下的source文件里。_data和404也复制过去。_data里的links.yml文件中是友情链接，每个友情链接按如下格式： 1234MyFriendName: link: https://his_link/ // 改成朋友的链接 avatar: https://his_avatar.png // 改成朋友的头像url desc: &quot;His discription&quot; // 给朋友的描述 _data里的gallery.yml文件是干什么的我暂时还没搞懂。 现在重新访问浏览器，发现你的博客网站已经大变样了，一切操作正确的话不会出现任何问题。 六、将Hexo部署到 Github Pages使用 hexo-deployer-git。参考这篇文章。 先在自己的github上新建一个仓库，仓库名为 你的Github昵称.github.io ，如 PrinceSaoKe.github.io。 在终端输入 1npm install hexo-deployer-git --save 安装 hexo-deployer-git。 打开根目录下的_config.yml文件，滑到最底下找到deploy，改成 1234deploy: type: git repo: https://github.com/你的github昵称/你的github昵称.github.io branch: master // 注意看你仓库的主分支是master还是main，一般是master 最后，依次在终端输入以下命令： 123hexo cl // 清理之前的页面hexo g // 生成新的页面hexo d // 部署网站到创建的仓库 刚部署完可能要过一两分钟，然后在任意一个设备的浏览器输入网址 http:&#x2F;&#x2F;你的Github昵称.github.io 就可以访问到你的hexo博客啦！ 写博客好累，后面应该不会写得这么详细了。我的hexo个人博客也上传到了github，欢迎参观","categories":[{"name":"整点花活","slug":"整点花活","permalink":"http://princesaoke.github.io/categories/%E6%95%B4%E7%82%B9%E8%8A%B1%E6%B4%BB/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://princesaoke.github.io/tags/Hexo/"}]}],"categories":[{"name":"整点花活","slug":"整点花活","permalink":"http://princesaoke.github.io/categories/%E6%95%B4%E7%82%B9%E8%8A%B1%E6%B4%BB/"}],"tags":[{"name":"Github","slug":"Github","permalink":"http://princesaoke.github.io/tags/Github/"},{"name":"Hexo","slug":"Hexo","permalink":"http://princesaoke.github.io/tags/Hexo/"}]}