<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>骚客.的个人博客</title>
  
  <subtitle>记录我的学习过程</subtitle>
  <link href="http://princesaoke.github.io/atom.xml" rel="self"/>
  
  <link href="http://princesaoke.github.io/"/>
  <updated>2024-05-17T04:03:42.677Z</updated>
  <id>http://princesaoke.github.io/</id>
  
  <author>
    <name>骚客.</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>阿里智能信息前端实习面经</title>
    <link href="http://princesaoke.github.io/2024/05/15/%E9%98%BF%E9%87%8C%E6%99%BA%E8%83%BD%E4%BF%A1%E6%81%AF%E5%89%8D%E7%AB%AF%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/"/>
    <id>http://princesaoke.github.io/2024/05/15/%E9%98%BF%E9%87%8C%E6%99%BA%E8%83%BD%E4%BF%A1%E6%81%AF%E5%89%8D%E7%AB%AF%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/</id>
    <published>2024-05-15T13:34:56.000Z</published>
    <updated>2024-05-17T04:03:42.677Z</updated>
    
    <content type="html"><![CDATA[<p>一面挂，四十五分钟。</p><ul><li><span style="color: green">✔</span> 编程题：URL combo - 字符串分割</li><li><span style="color: green">✔</span> 编程题：统计网页中出现了几种HTML元素</li><li><span style="color: red">❌</span> Array如何转化为Set</li><li><span style="color: green">✔</span> 自我介绍，说一下学习和项目经历</li><li><span style="color: green">✔</span> 为什么学习Flutter？Flutter优势何在？</li><li><span style="color: green">✔</span> Flutter三棵树分别起什么作用？</li><li><span style="color: red">❌</span> Flutter状态管理相关，子组件如何与父组件通信？</li><li><span style="color: red">❌</span> Flutter如何与底层原生通信，如image_picker调用系统相机的原理？</li><li><span style="color: red">❌</span> 说一下MQTT协议？有什么特性？为什么物联网用MQTT？MQTT是基于TCP还是UDP？</li><li><span style="color: red">❌</span> 说一下 HTTP1.0 和 HTTP2.0 的区别</li><li><span style="color: red">❌</span> 说一下前端工程化？Vite有什么优势？</li><li><span style="color: green">✔</span> 为什么没有选择客户端开发？</li><li><span style="color: green">✔</span> 未来规划读研还是就业？</li></ul><p>代码题：URL combo - 字符串分割</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以下是天猫首页一个经过 combo 的 js 资源 url，请找出 combo 规律并用 js 写一个可复用的函数来解该 url，得到每个 combo 前的 url 地址。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> urlStr = <span class="string">&#x27;https://g.alicdn.com/??code/npm/web-rax-framework/0.6.5/dist/framework.web.min.js,mtb/lib-windvane/2.1.8/windvane.cmd.js,mtb/lib-promise/3.1.3/polyfillB.js,mtb/lib-mtop/2.4.0/mtop.js,mtb/lib-login/1.5.3/login.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">unComboUrl</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="comment">// 以&#x27;/&#x27;分割，还原出baseUrl</span></span><br><span class="line">    <span class="comment">// 再以逗号分割，将每一项与baseUrl合并</span></span><br><span class="line">    <span class="keyword">const</span> l = url.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> baseUrl = l[<span class="number">0</span>] + <span class="string">&#x27;//&#x27;</span> + l[<span class="number">2</span>] + <span class="string">&#x27;/&#x27;</span></span><br><span class="line">    <span class="keyword">var</span> list = url.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; list.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(list[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        list[i] = baseUrl + list[i]</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(list[i])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">unComboUrl</span>(urlStr)</span><br></pre></td></tr></table></figure><p>代码题：统计网页中出现了几种HTML元素</p><p>一开始没写出来，因为我没法用DOM操作提取出HTML标签，后来面试官改成字符串：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在一个网页中，用尽可能少的代码，计算出当前网页用了多少种 HTML 元素。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历字符串，遇到`&lt;`则开始识别HTML标签，`&gt;`或空格前的即为标签，将其入栈</span></span><br><span class="line"><span class="comment">// 遇到`&lt;/`则为闭标签，识别后将栈顶对应标签出栈，若栈顶不匹配，则说明栈顶是非闭合标签，同样出栈，直到匹配为止</span></span><br><span class="line"><span class="comment">// 若是形如`&lt;img /&gt;`的标签，则不用入栈进入下一步</span></span><br><span class="line"><span class="comment">// 将出栈的标签加入集合，得到无重复的标签，集合大小即HTML种类数量</span></span><br></pre></td></tr></table></figure><p>HTTP1.0 和 HTTP2.0的区别：</p><p>HTTP1.0：</p><ul><li><strong>单一请求-响应模式</strong>：每次请求-响应都需要建立一个新的TCP连接，这个过程包括三次握手，增加了延迟</li><li><strong>无状态连接</strong>：每个请求都是独立的，服务器不维护客户端的状态</li><li><strong>请求头和响应头冗余</strong>：每次请求都会发送完整的头部信息，导致数据冗余和效率低下</li><li><strong>文本协议</strong>：所有的请求和响应都是基于文本的，解析速度相对较慢</li><li><strong>有限的并发</strong>：因为每个请求都需要一个单独的TCP连接，浏览器通常限制同一域名下的并发连接数，通常是4到6个</li></ul><p>HTTP2.0：</p><ul><li><strong>多路复用</strong>：实现了多路复用，允许在单个TCP连接上并发多个请求-响应对，从而减少了连接的数量和延迟</li><li><strong>二进制协议</strong>：相对于HTTP&#x2F;1.0的文本协议，HTTP&#x2F;2.0采用二进制格式，解析更高效</li><li><strong>头部压缩</strong>：使用HPACK压缩算法来减少头部信息的大小，从而减少带宽消耗</li><li><strong>服务器推送</strong>：服务器可以主动向客户端推送资源，而无需客户端明确请求，这样可以减少延迟并提高性能</li><li><strong>流优先级</strong>：客户端和服务器可以通过设置流优先级来优化资源的传输顺序</li><li><strong>连接管理</strong>：更有效的连接管理机制，通过单个连接处理多个并发请求，减少了连接建立和维护的开销</li><li><strong>改进的安全性</strong>：虽然HTTP&#x2F;2.0可以在明文（HTTP）和加密（HTTPS）下工作，但通常与TLS（传输层安全协议）结合使用，以提供更好的安全性</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一面挂，四十五分钟。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;color: green&quot;&gt;✔&lt;/span&gt; 编程题：URL combo - 字符串分割&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;color: green&quot;&gt;✔&lt;/span&gt; 编程题：统计网页中出</summary>
      
    
    
    
    <category term="面经" scheme="http://princesaoke.github.io/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>排序算法总结</title>
    <link href="http://princesaoke.github.io/2024/05/14/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://princesaoke.github.io/2024/05/14/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2024-05-14T12:47:03.000Z</published>
    <updated>2024-05-14T15:53:00.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><p>基于<code>分治</code>和<code>递归</code>。</p><p>其基本思路是，在数组中选择一个元素作为基准值，然后将数组中小于基准值的元素移动到它的左边，大于基准值的元素移动到它的右边。然后对左右两个子数组递归地重复这个过程，直到子数组的大小为1或0。</p><p>最好情况：每次划分左右两边的元素数量相同各为一半，则此时时间复杂度为<code>O(nlogn)</code></p><p>最坏情况：每次划分所有元素都在一边，另一边为空，则此时与冒泡排序类似，时间复杂度为<code>O(n²)</code></p><p>平均情况：时间复杂度为<code>O(nlogn)</code></p><p>因此关键在于每次基准值的选取。</p><p>通过不同方式选取基准值，有以下几种衍生快排：</p><ul><li><p><strong>随机快速排序</strong>：即在数组中完全随机地挑选一个值作为基准值。</p></li><li><p><strong>三数取中快速排序</strong>：即取数组中第一个、中间、最后一个这三个元素的中位数作为基准值。</p></li><li><p><strong>三划分快速排序</strong>：适用于数组中有较多大小相同的数。对于等于基准值的数分为除左右外的第三部分，不用继续参与递归。</p></li></ul><p>图解：</p><p>以数组中第一个元素为基准值</p><p><img src="/images/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/quick_sort_1.jpg" alt="快排1"></p><p>左指针不断右移，直到找到比基准值大的元素停下；右指针不断左移，直到找到比基准值小的元素停下</p><p><img src="/images/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/quick_sort_2.jpg" alt="快排2"></p><p><img src="/images/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/quick_sort_3.jpg" alt="快排3"></p><p><img src="/images/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/quick_sort_4.jpg" alt="快排4"></p><p><img src="/images/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/quick_sort_5.jpg" alt="快排5"></p><p>当两指针碰面或超过，说明已经全部遍历了</p><p><img src="/images/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/quick_sort_6.jpg" alt="快排6"></p><p><img src="/images/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/quick_sort_7.jpg" alt="快排7"></p><p>交换后左边都小于基准值，右边都大于基准值</p><p><img src="/images/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/quick_sort_8.jpg" alt="快排8"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 以数组中第一个元素为基准值，确定其位置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">partition</span><span class="params">(T a[], <span class="type">int</span> begin, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">    <span class="type">int</span> left = begin + <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> right = end;</span><br><span class="line">    T base = a[begin];</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (a[left++] &lt; base);   <span class="comment">// 左指针不断右移，直到找到比基准值大的元素</span></span><br><span class="line">        <span class="keyword">while</span> (a[right--] &gt; base);  <span class="comment">// 右指针不断左移，直到找到比基准值小的元素</span></span><br><span class="line">        <span class="keyword">if</span>(left &gt;= right) <span class="keyword">break</span>;    <span class="comment">// 当两指针碰面或超过，说明已经全部遍历了</span></span><br><span class="line">        swap(a[left], a[right]);</span><br><span class="line">    &#125;</span><br><span class="line">    swap(a[right], a[begin]);       <span class="comment">// 交换后right左边都小于base，右边都大于base</span></span><br><span class="line">    <span class="keyword">return</span> right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">randomPartition</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> randomIndex = Random(begin, end);  <span class="comment">// 可取不同值作为基准值，这里随机一个下标</span></span><br><span class="line">    swap(a[randomIndex], a[begin]);</span><br><span class="line">    <span class="keyword">return</span> partition(a, begin, end);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">quickSort</span><span class="params">(T a[], <span class="type">int</span> begin, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (begin &lt; end) &#123;</span><br><span class="line">        <span class="type">int</span> middle = partition(a, begin, end);</span><br><span class="line">        quickSort(a, begin, middle - <span class="number">1</span>);</span><br><span class="line">        quickSort(a, middle + <span class="number">1</span>, end);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;快速排序&quot;&gt;&lt;a href=&quot;#快速排序&quot; class=&quot;headerlink&quot; title=&quot;快速排序&quot;&gt;&lt;/a&gt;快速排序&lt;/h2&gt;&lt;p&gt;基于&lt;code&gt;分治&lt;/code&gt;和&lt;code&gt;递归&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;其基本思路是，在数组中选择一个元素作为基</summary>
      
    
    
    
    <category term="算法" scheme="http://princesaoke.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>饿了么客户端实习面经</title>
    <link href="http://princesaoke.github.io/2024/05/07/%E9%A5%BF%E4%BA%86%E4%B9%88%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/"/>
    <id>http://princesaoke.github.io/2024/05/07/%E9%A5%BF%E4%BA%86%E4%B9%88%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/</id>
    <published>2024-05-07T11:30:21.000Z</published>
    <updated>2024-05-16T10:46:17.063Z</updated>
    
    <content type="html"><![CDATA[<p>答的很烂……就没几个问题是答出来的 T^T</p><p>共四十多分钟。</p><ul><li><span style="color: green">✔</span> 自我介绍</li><li><span style="color: green">✔</span> 详细讲一下实习期间做了哪些事情？实现的细节？</li><li><span style="color: red">❌</span> LazyColumn和Column有什么区别？为什么能提升性能？</li><li><span style="color: red">❌</span> 长列表的数据如果一次性加载会卡顿，如何处理？分页查询相关。如何刷新？前一页的数据如何处理？</li><li><span style="color: red">❌</span> Flutter三个树？嵌套的组件渲染绘制的步骤？</li><li><span style="color: red">✔</span> UDP和TCP的区别</li><li><span style="color: red">❌</span> 2M的数据流，通过TCP发送，要经过哪些步骤？</li><li><span style="color: red">❌</span> APP的启动过程</li><li><span style="color: red">✔</span> Activity的生命周期？两个Activity跳转其分别的生命周期函数调用顺序？哪些情况下不会进入onStop？</li><li><span style="color: red">❌</span> 说一下快排</li><li><span style="color: red">✔</span> 最大递增子串</li><li><span style="color: red">✔</span> 链表翻转</li></ul><p>长列表性能问题应该是想问<code>RecyclerView</code>四级缓存机制吧。即<code>Scrap缓存</code>、<code>Recycle缓存</code>、<code>ViewCacheExtension缓存</code>、<code>RecycledViewPool缓存</code>。</p><p>RecyclerView在滚动时会复用已经存在的ViewHolder对象，而不是每次都创建新的ViewHolder。这样做的好处是减少了对象的创建和销毁次数，提高了内存利用率和性能。当列表项滚出屏幕时，对应的ViewHolder会被移除并加入到RecyclerView的内部缓存池中，当新的列表项需要显示时，RecyclerView会尝试从缓存池中获取可用的ViewHolder对象，避免了重新创建ViewHolder。</p><p>RecyclerView提供了setItemViewCacheSize()方法来设置缓存的ViewHolder数量。通过适当调整这个值，可以控制缓存的大小，避免过多的缓存导致内存占用过高。</p><p>Flutter三棵树指的是<code>Widget树</code>、<code>Element树</code>、<code>RenderObject树</code>。</p><p><a href="https://blog.csdn.net/xiaokangss/article/details/125547085">Activity的生命周期和启动模式详解</a></p><p><code>Fragment</code>在显示到销毁的过程中会执行自己的生命周期：<code>onAttach</code> -&gt; <code>onCreate</code> -&gt;<code>onCreateView</code> -&gt; <code>onActivityCreate</code> -&gt; <code>onStart</code> -&gt; <code>onResume</code> -&gt; <code>onPause</code> -&gt; <code>onStop</code> -&gt; <code>onDestroyView</code> -&gt; <code>onDestroy</code> -&gt; <code>onDetach</code></p><p>同时也受到<code>Activity</code>生命周期的影响，如果Activity触发<code>onPause</code>，Fragment也会执行相应的onPause。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;答的很烂……就没几个问题是答出来的 T^T&lt;/p&gt;
&lt;p&gt;共四十多分钟。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;color: green&quot;&gt;✔&lt;/span&gt; 自我介绍&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;color: green&quot;&gt;✔&lt;/span&gt; 详</summary>
      
    
    
    
    <category term="面经" scheme="http://princesaoke.github.io/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>美团客户端实习面经</title>
    <link href="http://princesaoke.github.io/2024/04/28/%E7%BE%8E%E5%9B%A2%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/"/>
    <id>http://princesaoke.github.io/2024/04/28/%E7%BE%8E%E5%9B%A2%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/</id>
    <published>2024-04-28T14:08:43.000Z</published>
    <updated>2024-05-16T16:47:05.070Z</updated>
    
    <content type="html"><![CDATA[<h2 id="笔试-4-27"><a href="#笔试-4-27" class="headerlink" title="笔试 4.27"></a>笔试 4.27</h2><p>题型：30题单选题，2题编程题</p><p>时间：2小时</p><p>单选题主要有计算机网络、操作系统、数据结构、数字找规律、三元一次方程应用题等。</p><p>记录单选题涉及到的知识点</p><h4 id="有效的子网掩码"><a href="#有效的子网掩码" class="headerlink" title="有效的子网掩码"></a>有效的子网掩码</h4><h4 id="SQL共享锁和排它锁，其他事务能否读写"><a href="#SQL共享锁和排它锁，其他事务能否读写" class="headerlink" title="SQL共享锁和排它锁，其他事务能否读写"></a>SQL共享锁和排它锁，其他事务能否读写</h4><h4 id="HTTP2-和-HTTP3-的区别"><a href="#HTTP2-和-HTTP3-的区别" class="headerlink" title="HTTP2 和 HTTP3 的区别"></a>HTTP2 和 HTTP3 的区别</h4><p>编程题AC第一题，第二题不会。</p><p>当时没记录，现在忘了。。</p><h2 id="一面-5-16"><a href="#一面-5-16" class="headerlink" title="一面 5.16"></a>一面 5.16</h2><ul><li><span style="color: green">✔</span> C和C++的区别</li><li><span style="color: red">❌</span> 子结构体对父结构体函数的重写</li><li><span style="color: green">✔</span> 进程和线程的区别</li><li><span style="color: green">✔</span> 同步和异步的区别？为什么需要异步？多线程操作时可能出现什么问题？</li><li><span style="color: red">❌</span> OSI七层网络模型</li><li><span style="color: green">✔</span> HTTP和HTTPS的区别？HTTP全称是什么？HTTPS的S指什么？</li><li><span style="color: green">✔</span> TCP和UDP的区别</li><li><span style="color: green">✔</span> 为什么要三次握手</li><li><span style="color: green">✔</span> 服务器如何知道请求中的不同类型的数据格式？</li><li><span style="color: red">❌</span> 编程题：翻转链表</li></ul><p>全都是考基础，没问项目没问实习。</p><p>开头自我介绍，然后问我熟悉什么语言，C++或Java会吗，一开始就是打算考编程语言。</p><p>C和C++的区别，答：一个是面向对象一个是面向过程，C++有输入输出流</p><p>然后出了个题：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> &#123;</span></span><br><span class="line">    f() &#123; <span class="built_in">printf</span>(<span class="string">&#x27;A&#x27;</span>); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span> :</span> A &#123;</span><br><span class="line">    f() &#123; <span class="built_in">printf</span>(<span class="string">&#x27;B&#x27;</span>); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    A a = A();</span><br><span class="line">    B b = B();</span><br><span class="line">    a.f();</span><br><span class="line">    b.f();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问输出是什么。又问给<code>B</code>的<code>f()</code>加上<code>virtual</code>，输出是什么。</p><p>最后一题考编程题，两非递减数组原地排序，LeetCode上刷过，心中窃喜，结果语言切到C++，判题器有点问题没给提交模板，判不了题直接编译错误，面试官也弄不明白，就给我换了一题翻转链表，结果没做出来，被自己的抽象操作蠢哭了…… T^T</p><p>最后面试官还指出了我的不足。在我做编程题的时候他看了我的Github和博客，说我项目是足够的，但是要注重基础，编程语言的基础和底层，计网、数据结构四大件的基础等。</p><p>还是第一次有面试官给我提建议，发觉不同面试官之间面试方式还是有挺大差距的，有的没怎么问编程语言，有的不怎么问实践。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;笔试-4-27&quot;&gt;&lt;a href=&quot;#笔试-4-27&quot; class=&quot;headerlink&quot; title=&quot;笔试 4.27&quot;&gt;&lt;/a&gt;笔试 4.27&lt;/h2&gt;&lt;p&gt;题型：30题单选题，2题编程题&lt;/p&gt;
&lt;p&gt;时间：2小时&lt;/p&gt;
&lt;p&gt;单选题主要有计算机网络、操</summary>
      
    
    
    
    <category term="面经" scheme="http://princesaoke.github.io/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>各种编码格式</title>
    <link href="http://princesaoke.github.io/2024/04/12/%E5%90%84%E7%A7%8D%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F/"/>
    <id>http://princesaoke.github.io/2024/04/12/%E5%90%84%E7%A7%8D%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F/</id>
    <published>2024-04-11T16:27:17.000Z</published>
    <updated>2024-04-11T17:11:13.047Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ASCII码"><a href="#ASCII码" class="headerlink" title="ASCII码"></a>ASCII码</h2><table><thead><tr><th align="center">十进制</th><th align="center">缩写&#x2F;字符</th><th align="center">解释</th><th align="center">二进制</th><th align="center">八进制</th><th align="center">十六进制</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">NUL(null)</td><td align="center">空字符</td><td align="center">0000 0000</td><td align="center">00</td><td align="center">0x00</td></tr><tr><td align="center">1</td><td align="center">SOH(start of headline)</td><td align="center">标题开始</td><td align="center">0000 0001</td><td align="center">01</td><td align="center">0x01</td></tr><tr><td align="center">2</td><td align="center">STX (start of text)</td><td align="center">正文开始</td><td align="center">0000 0010</td><td align="center">02</td><td align="center">0x02</td></tr><tr><td align="center">3</td><td align="center">ETX (end of text)</td><td align="center">正文结束</td><td align="center">0000 0011</td><td align="center">03</td><td align="center">0x03</td></tr><tr><td align="center">4</td><td align="center">EOT (end of transmission)</td><td align="center">传输结束</td><td align="center">0000 0100</td><td align="center">04</td><td align="center">0x04</td></tr><tr><td align="center">5</td><td align="center">ENQ (enquiry)</td><td align="center">请求</td><td align="center">0000 0101</td><td align="center">05</td><td align="center">0x05</td></tr><tr><td align="center">6</td><td align="center">ACK (acknowledge)</td><td align="center">收到通知</td><td align="center">0000 0110</td><td align="center">06</td><td align="center">0x06</td></tr><tr><td align="center">7</td><td align="center">BEL (bell)</td><td align="center">响铃</td><td align="center">0000 0111</td><td align="center">07</td><td align="center">0x07</td></tr><tr><td align="center">8</td><td align="center">BS (backspace)</td><td align="center">退格</td><td align="center">0000 1000</td><td align="center">010</td><td align="center">0x08</td></tr><tr><td align="center">9</td><td align="center">HT (horizontal tab)</td><td align="center">水平制表符</td><td align="center">0000 1001</td><td align="center">011</td><td align="center">0x09</td></tr><tr><td align="center">10</td><td align="center">LF (NL line feed, new line)</td><td align="center">换行键</td><td align="center">0000 1010</td><td align="center">012</td><td align="center">0x0A</td></tr><tr><td align="center">11</td><td align="center">VT (vertical tab)</td><td align="center">垂直制表符</td><td align="center">0000 1011</td><td align="center">013</td><td align="center">0x0B</td></tr><tr><td align="center">12</td><td align="center">FF (NP form feed, new page)</td><td align="center">换页键</td><td align="center">0000 1100</td><td align="center">014</td><td align="center">0x0C</td></tr><tr><td align="center">13</td><td align="center">CR (carriage return)</td><td align="center">回车键</td><td align="center">0000 1101</td><td align="center">015</td><td align="center">0x0D</td></tr><tr><td align="center">14</td><td align="center">SO (shift out)</td><td align="center">不用切换</td><td align="center">0000 1110</td><td align="center">016</td><td align="center">0x0E</td></tr><tr><td align="center">15</td><td align="center">SI (shift in)</td><td align="center">启用切换</td><td align="center">0000 1111</td><td align="center">017</td><td align="center">0x0F</td></tr><tr><td align="center">16</td><td align="center">DLE (data link escape)</td><td align="center">数据链路转义</td><td align="center">0001 0000</td><td align="center">020</td><td align="center">0x10</td></tr><tr><td align="center">17</td><td align="center">DC1 (device control 1)</td><td align="center">设备控制1</td><td align="center">0001 0001</td><td align="center">021</td><td align="center">0x11</td></tr><tr><td align="center">18</td><td align="center">DC2 (device control 2)</td><td align="center">设备控制2</td><td align="center">0001 0010</td><td align="center">022</td><td align="center">0x12</td></tr><tr><td align="center">19</td><td align="center">DC3 (device control 3)</td><td align="center">设备控制3</td><td align="center">0001 0011</td><td align="center">023</td><td align="center">0x13</td></tr><tr><td align="center">20</td><td align="center">DC4 (device control 4)</td><td align="center">设备控制4</td><td align="center">0001 0100</td><td align="center">024</td><td align="center">0x14</td></tr><tr><td align="center">21</td><td align="center">NAK (negative acknowledge)</td><td align="center">拒绝接收</td><td align="center">0001 0101</td><td align="center">025</td><td align="center">0x15</td></tr><tr><td align="center">22</td><td align="center">SYN (synchronous idle)</td><td align="center">同步空闲</td><td align="center">0001 0110</td><td align="center">026</td><td align="center">0x16</td></tr><tr><td align="center">23</td><td align="center">ETB (end of trans. block)</td><td align="center">结束传输块</td><td align="center">0001 0111</td><td align="center">027</td><td align="center">0x17</td></tr><tr><td align="center">24</td><td align="center">CAN (cancel)</td><td align="center">取消</td><td align="center">0001 1000</td><td align="center">030</td><td align="center">0x18</td></tr><tr><td align="center">25</td><td align="center">EM (end of medium)</td><td align="center">媒介结束</td><td align="center">0001 1001</td><td align="center">031</td><td align="center">0x19</td></tr><tr><td align="center">26</td><td align="center">SUB (substitute)</td><td align="center">代替</td><td align="center">0001 1010</td><td align="center">032</td><td align="center">0x1A</td></tr><tr><td align="center">27</td><td align="center">ESC (escape)</td><td align="center">换码(溢出)</td><td align="center">0001 1011</td><td align="center">033</td><td align="center">0x1B</td></tr><tr><td align="center">28</td><td align="center">FS (file separator)</td><td align="center">文件分隔符</td><td align="center">0001 1100</td><td align="center">034</td><td align="center">0x1C</td></tr><tr><td align="center">29</td><td align="center">GS (group separator)</td><td align="center">分组符</td><td align="center">0001 1101</td><td align="center">035</td><td align="center">0x1D</td></tr><tr><td align="center">30</td><td align="center">RS (record separator)</td><td align="center">记录分隔符</td><td align="center">0001 1110</td><td align="center">036</td><td align="center">0x1E</td></tr><tr><td align="center">31</td><td align="center">US (unit separator)</td><td align="center">单元分隔符</td><td align="center">0001 1111</td><td align="center">037</td><td align="center">0x1F</td></tr><tr><td align="center">32</td><td align="center">(space)</td><td align="center">空格</td><td align="center">0010 0000</td><td align="center">040</td><td align="center">0x20</td></tr><tr><td align="center">33</td><td align="center">!</td><td align="center">叹号</td><td align="center">0010 0001</td><td align="center">041</td><td align="center">0x21</td></tr><tr><td align="center">34</td><td align="center">“</td><td align="center">双引号</td><td align="center">0010 0010</td><td align="center">042</td><td align="center">0x22</td></tr><tr><td align="center">35</td><td align="center">#</td><td align="center">井号</td><td align="center">0010 0011</td><td align="center">043</td><td align="center">0x23</td></tr><tr><td align="center">36</td><td align="center">$</td><td align="center">美元符</td><td align="center">0010 0100</td><td align="center">044</td><td align="center">0x24</td></tr><tr><td align="center">37</td><td align="center">%</td><td align="center">百分号</td><td align="center">0010 0101</td><td align="center">045</td><td align="center">0x25</td></tr><tr><td align="center">38</td><td align="center">&amp;</td><td align="center">和号</td><td align="center">0010 0110</td><td align="center">046</td><td align="center">0x26</td></tr><tr><td align="center">39</td><td align="center">‘</td><td align="center">闭单引号</td><td align="center">0010 0111</td><td align="center">047</td><td align="center">0x27</td></tr><tr><td align="center">40</td><td align="center">(</td><td align="center">开括号</td><td align="center">0010 1000</td><td align="center">050</td><td align="center">0x28</td></tr><tr><td align="center">41</td><td align="center">)</td><td align="center">闭括号</td><td align="center">0010 1001</td><td align="center">051</td><td align="center">0x29</td></tr><tr><td align="center">42</td><td align="center">*</td><td align="center">星号</td><td align="center">0010 1010</td><td align="center">052</td><td align="center">0x2A</td></tr><tr><td align="center">43</td><td align="center">+</td><td align="center">加号</td><td align="center">0010 1011</td><td align="center">053</td><td align="center">0x2B</td></tr><tr><td align="center">44</td><td align="center">,</td><td align="center">逗号</td><td align="center">0010 1100</td><td align="center">054</td><td align="center">0x2C</td></tr><tr><td align="center">45</td><td align="center">-</td><td align="center">减号&#x2F;破折号</td><td align="center">0010 1101</td><td align="center">055</td><td align="center">0x2D</td></tr><tr><td align="center">46</td><td align="center">.</td><td align="center">句号</td><td align="center">0010 1110</td><td align="center">056</td><td align="center">0x2E</td></tr><tr><td align="center">47</td><td align="center">&#x2F;</td><td align="center">斜杠</td><td align="center">0010 1111</td><td align="center">057</td><td align="center">0x2F</td></tr><tr><td align="center">48</td><td align="center">0</td><td align="center">字符0</td><td align="center">0011 0000</td><td align="center">060</td><td align="center">0x30</td></tr><tr><td align="center">49</td><td align="center">1</td><td align="center">字符1</td><td align="center">0011 0001</td><td align="center">061</td><td align="center">0x31</td></tr><tr><td align="center">50</td><td align="center">2</td><td align="center">字符2</td><td align="center">0011 0010</td><td align="center">062</td><td align="center">0x32</td></tr><tr><td align="center">51</td><td align="center">3</td><td align="center">字符3</td><td align="center">0011 0011</td><td align="center">063</td><td align="center">0x33</td></tr><tr><td align="center">52</td><td align="center">4</td><td align="center">字符4</td><td align="center">0011 0100</td><td align="center">064</td><td align="center">0x34</td></tr><tr><td align="center">53</td><td align="center">5</td><td align="center">字符5</td><td align="center">0011 0101</td><td align="center">065</td><td align="center">0x35</td></tr><tr><td align="center">54</td><td align="center">6</td><td align="center">字符6</td><td align="center">0011 0110</td><td align="center">066</td><td align="center">0x36</td></tr><tr><td align="center">55</td><td align="center">7</td><td align="center">字符7</td><td align="center">0011 0111</td><td align="center">067</td><td align="center">0x37</td></tr><tr><td align="center">56</td><td align="center">8</td><td align="center">字符8</td><td align="center">0011 1000</td><td align="center">070</td><td align="center">0x38</td></tr><tr><td align="center">57</td><td align="center">9</td><td align="center">字符9</td><td align="center">0011 1001</td><td align="center">071</td><td align="center">0x39</td></tr><tr><td align="center">58</td><td align="center">:</td><td align="center">冒号</td><td align="center">0011 1010</td><td align="center">072</td><td align="center">0x3A</td></tr><tr><td align="center">59</td><td align="center">;</td><td align="center">分号</td><td align="center">0011 1011</td><td align="center">073</td><td align="center">0x3B</td></tr><tr><td align="center">60</td><td align="center">&lt;</td><td align="center">小于</td><td align="center">0011 1100</td><td align="center">074</td><td align="center">0x3C</td></tr><tr><td align="center">61</td><td align="center">&#x3D;</td><td align="center">等号</td><td align="center">0011 1101</td><td align="center">075</td><td align="center">0x3D</td></tr><tr><td align="center">62</td><td align="center">&gt;</td><td align="center">大于</td><td align="center">0011 1110</td><td align="center">076</td><td align="center">0x3E</td></tr><tr><td align="center">63</td><td align="center">?</td><td align="center">问号</td><td align="center">0011 1111</td><td align="center">077</td><td align="center">0x3F</td></tr><tr><td align="center">64</td><td align="center">@</td><td align="center">电子邮件符号</td><td align="center">0100 0000</td><td align="center">0100</td><td align="center">0x40</td></tr><tr><td align="center">65</td><td align="center">A</td><td align="center">大写字母A</td><td align="center">0100 0001</td><td align="center">0101</td><td align="center">0x41</td></tr><tr><td align="center">66</td><td align="center">B</td><td align="center">大写字母B</td><td align="center">0100 0010</td><td align="center">0102</td><td align="center">0x42</td></tr><tr><td align="center">67</td><td align="center">C</td><td align="center">大写字母C</td><td align="center">0100 0011</td><td align="center">0103</td><td align="center">0x43</td></tr><tr><td align="center">68</td><td align="center">D</td><td align="center">大写字母D</td><td align="center">0100 0100</td><td align="center">0104</td><td align="center">0x44</td></tr><tr><td align="center">69</td><td align="center">E</td><td align="center">大写字母E</td><td align="center">0100 0101</td><td align="center">0105</td><td align="center">0x45</td></tr><tr><td align="center">70</td><td align="center">F</td><td align="center">大写字母F</td><td align="center">0100 0110</td><td align="center">0106</td><td align="center">0x46</td></tr><tr><td align="center">71</td><td align="center">G</td><td align="center">大写字母G</td><td align="center">0100 0111</td><td align="center">0107</td><td align="center">0x47</td></tr><tr><td align="center">72</td><td align="center">H</td><td align="center">大写字母H</td><td align="center">0100 1000</td><td align="center">0110</td><td align="center">0x48</td></tr><tr><td align="center">73</td><td align="center">I</td><td align="center">大写字母I</td><td align="center">0100 1001</td><td align="center">0111</td><td align="center">0x49</td></tr><tr><td align="center">74</td><td align="center">J</td><td align="center">大写字母J</td><td align="center">01001010</td><td align="center">0112</td><td align="center">0x4A</td></tr><tr><td align="center">75</td><td align="center">K</td><td align="center">大写字母K</td><td align="center">0100 1011</td><td align="center">0113</td><td align="center">0x4B</td></tr><tr><td align="center">76</td><td align="center">L</td><td align="center">大写字母L</td><td align="center">0100 1100</td><td align="center">0114</td><td align="center">0x4C</td></tr><tr><td align="center">77</td><td align="center">M</td><td align="center">大写字母M</td><td align="center">0100 1101</td><td align="center">0115</td><td align="center">0x4D</td></tr><tr><td align="center">78</td><td align="center">N</td><td align="center">大写字母N</td><td align="center">0100 1110</td><td align="center">0116</td><td align="center">0x4E</td></tr><tr><td align="center">79</td><td align="center">O</td><td align="center">大写字母O</td><td align="center">0100 1111</td><td align="center">0117</td><td align="center">0x4F</td></tr><tr><td align="center">80</td><td align="center">P</td><td align="center">大写字母P</td><td align="center">0101 0000</td><td align="center">0120</td><td align="center">0x50</td></tr><tr><td align="center">81</td><td align="center">Q</td><td align="center">大写字母Q</td><td align="center">0101 0001</td><td align="center">0121</td><td align="center">0x51</td></tr><tr><td align="center">82</td><td align="center">R</td><td align="center">大写字母R</td><td align="center">0101 0010</td><td align="center">0122</td><td align="center">0x52</td></tr><tr><td align="center">83</td><td align="center">S</td><td align="center">大写字母S</td><td align="center">0101 0011</td><td align="center">0123</td><td align="center">0x53</td></tr><tr><td align="center">84</td><td align="center">T</td><td align="center">大写字母T</td><td align="center">0101 0100</td><td align="center">0124</td><td align="center">0x54</td></tr><tr><td align="center">85</td><td align="center">U</td><td align="center">大写字母U</td><td align="center">0101 0101</td><td align="center">0125</td><td align="center">0x55</td></tr><tr><td align="center">86</td><td align="center">V</td><td align="center">大写字母V</td><td align="center">0101 0110</td><td align="center">0126</td><td align="center">0x56</td></tr><tr><td align="center">87</td><td align="center">W</td><td align="center">大写字母W</td><td align="center">0101 0111</td><td align="center">0127</td><td align="center">0x57</td></tr><tr><td align="center">88</td><td align="center">X</td><td align="center">大写字母X</td><td align="center">0101 1000</td><td align="center">0130</td><td align="center">0x58</td></tr><tr><td align="center">89</td><td align="center">Y</td><td align="center">大写字母Y</td><td align="center">0101 1001</td><td align="center">0131</td><td align="center">0x59</td></tr><tr><td align="center">90</td><td align="center">Z</td><td align="center">大写字母Z</td><td align="center">0101 1010</td><td align="center">0132</td><td align="center">0x5A</td></tr><tr><td align="center">91</td><td align="center">[</td><td align="center">开方括号</td><td align="center">0101 1011</td><td align="center">0133</td><td align="center">0x5B</td></tr><tr><td align="center">92</td><td align="center">\</td><td align="center">反斜杠</td><td align="center">0101 1100</td><td align="center">0134</td><td align="center">0x5C</td></tr><tr><td align="center">93</td><td align="center">]</td><td align="center">闭方括号</td><td align="center">0101 1101</td><td align="center">0135</td><td align="center">0x5D</td></tr><tr><td align="center">94</td><td align="center">^</td><td align="center">脱字符</td><td align="center">0101 1110</td><td align="center">0136</td><td align="center">0x5E</td></tr><tr><td align="center">95</td><td align="center">_</td><td align="center">下划线</td><td align="center">0101 1111</td><td align="center">0137</td><td align="center">0x5F</td></tr><tr><td align="center">96</td><td align="center">&#96;</td><td align="center">开单引号</td><td align="center">0110 0000</td><td align="center">0140</td><td align="center">0x60</td></tr><tr><td align="center">97</td><td align="center">a</td><td align="center">小写字母a</td><td align="center">0110 0001</td><td align="center">0141</td><td align="center">0x61</td></tr><tr><td align="center">98</td><td align="center">b</td><td align="center">小写字母b</td><td align="center">0110 0010</td><td align="center">0142</td><td align="center">0x62</td></tr><tr><td align="center">99</td><td align="center">c</td><td align="center">小写字母c</td><td align="center">0110 0011</td><td align="center">0143</td><td align="center">0x63</td></tr><tr><td align="center">100</td><td align="center">d</td><td align="center">小写字母d</td><td align="center">0110 0100</td><td align="center">0144</td><td align="center">0x64</td></tr><tr><td align="center">101</td><td align="center">e</td><td align="center">小写字母e</td><td align="center">0110 0101</td><td align="center">0145</td><td align="center">0x65</td></tr><tr><td align="center">102</td><td align="center">f</td><td align="center">小写字母f</td><td align="center">0110 0110</td><td align="center">0146</td><td align="center">0x66</td></tr><tr><td align="center">103</td><td align="center">g</td><td align="center">小写字母g</td><td align="center">0110 0111</td><td align="center">0147</td><td align="center">0x67</td></tr><tr><td align="center">104</td><td align="center">h</td><td align="center">小写字母h</td><td align="center">0110 1000</td><td align="center">0150</td><td align="center">0x68</td></tr><tr><td align="center">105</td><td align="center">i</td><td align="center">小写字母i</td><td align="center">0110 1001</td><td align="center">0151</td><td align="center">0x69</td></tr><tr><td align="center">106</td><td align="center">j</td><td align="center">小写字母j</td><td align="center">0110 1010</td><td align="center">0152</td><td align="center">0x6A</td></tr><tr><td align="center">107</td><td align="center">k</td><td align="center">小写字母k</td><td align="center">0110 1011</td><td align="center">0153</td><td align="center">0x6B</td></tr><tr><td align="center">108</td><td align="center">l</td><td align="center">小写字母l</td><td align="center">0110 1100</td><td align="center">0154</td><td align="center">0x6C</td></tr><tr><td align="center">109</td><td align="center">m</td><td align="center">小写字母m</td><td align="center">0110 1101</td><td align="center">0155</td><td align="center">0x6D</td></tr><tr><td align="center">110</td><td align="center">n</td><td align="center">小写字母n</td><td align="center">0110 1110</td><td align="center">0156</td><td align="center">0x6E</td></tr><tr><td align="center">111</td><td align="center">o</td><td align="center">小写字母o</td><td align="center">0110 1111</td><td align="center">0157</td><td align="center">0x6F</td></tr><tr><td align="center">112</td><td align="center">p</td><td align="center">小写字母p</td><td align="center">0111 0000</td><td align="center">0160</td><td align="center">0x70</td></tr><tr><td align="center">113</td><td align="center">q</td><td align="center">小写字母q</td><td align="center">0111 0001</td><td align="center">0161</td><td align="center">0x71</td></tr><tr><td align="center">114</td><td align="center">r</td><td align="center">小写字母r</td><td align="center">0111 0010</td><td align="center">0162</td><td align="center">0x72</td></tr><tr><td align="center">115</td><td align="center">s</td><td align="center">小写字母s</td><td align="center">0111 0011</td><td align="center">0163</td><td align="center">0x73</td></tr><tr><td align="center">116</td><td align="center">t</td><td align="center">小写字母t</td><td align="center">0111 0100</td><td align="center">0164</td><td align="center">0x74</td></tr><tr><td align="center">117</td><td align="center">u</td><td align="center">小写字母u</td><td align="center">0111 0101</td><td align="center">0165</td><td align="center">0x75</td></tr><tr><td align="center">118</td><td align="center">v</td><td align="center">小写字母v</td><td align="center">0111 0110</td><td align="center">0166</td><td align="center">0x76</td></tr><tr><td align="center">119</td><td align="center">w</td><td align="center">小写字母w</td><td align="center">0111 0111</td><td align="center">0167</td><td align="center">0x77</td></tr><tr><td align="center">120</td><td align="center">x</td><td align="center">小写字母x</td><td align="center">0111 1000</td><td align="center">0170</td><td align="center">0x78</td></tr><tr><td align="center">121</td><td align="center">y</td><td align="center">小写字母y</td><td align="center">0111 1001</td><td align="center">0171</td><td align="center">0x79</td></tr><tr><td align="center">122</td><td align="center">z</td><td align="center">小写字母z</td><td align="center">0111 1010</td><td align="center">0172</td><td align="center">0x7A</td></tr><tr><td align="center">123</td><td align="center">{</td><td align="center">开花括号</td><td align="center">0111 1011</td><td align="center">0173</td><td align="center">0x7B</td></tr><tr><td align="center">124</td><td align="center">|</td><td align="center">垂线</td><td align="center">0111 1100</td><td align="center">0174</td><td align="center">0x7C</td></tr><tr><td align="center">125</td><td align="center">}</td><td align="center">闭花括号</td><td align="center">0111 1101</td><td align="center">0175</td><td align="center">0x7D</td></tr><tr><td align="center">126</td><td align="center">~</td><td align="center">波浪号</td><td align="center">0111 1110</td><td align="center">0176</td><td align="center">0x7E</td></tr><tr><td align="center">127</td><td align="center">DEL (delete)</td><td align="center">删除</td><td align="center">0111 1111</td><td align="center">0177</td><td align="center">0x7F</td></tr></tbody></table><h2 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h2><p>将二进制流划分为若干3个字节的块（不足补0），然后再把每个块划分位4个6比特组，每个6比特组对应Base64字母表中的64个字符之一，再转换成字符对应的ASCII码在网络上传输。</p><p><img src="/images/%E5%90%84%E7%A7%8D%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F/base64.png" alt="Base64字母表"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ASCII码&quot;&gt;&lt;a href=&quot;#ASCII码&quot; class=&quot;headerlink&quot; title=&quot;ASCII码&quot;&gt;&lt;/a&gt;ASCII码&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;十进制&lt;/th&gt;
&lt;th alig</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MQTT协议</title>
    <link href="http://princesaoke.github.io/2024/04/03/MQTT%E5%8D%8F%E8%AE%AE/"/>
    <id>http://princesaoke.github.io/2024/04/03/MQTT%E5%8D%8F%E8%AE%AE/</id>
    <published>2024-04-02T16:24:10.000Z</published>
    <updated>2024-05-16T07:42:41.478Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/421109780">MQTT协议，终于有人讲清楚了</a></p><p><code>Flutter</code>中的MQTT库：<a href="https://pub.dev/packages/mqtt_client">mqtt_client</a>、<a href="https://pub.dev/packages/mqtt5_client">mqtt5_client</a></p><p>MQTT（Message Queuing Telemetry Transport）是一种轻量级的、开放的、基于发布&#x2F;订阅模式的消息传输协议。它具有以下特性：</p><ol><li><p><strong>轻量级</strong>: MQTT的设计目标之一是在网络带宽和设备资源有限的环境下运行。它的协议头部较小，传输效率高，适用于各种物联网设备，包括嵌入式系统和传感器。</p></li><li><p><strong>发布&#x2F;订阅模式</strong>: MQTT采用发布&#x2F;订阅模式进行消息传输，其中发布者（publisher）发布消息到特定的主题（topic），而订阅者（subscriber）则订阅感兴趣的主题。这种模式可以实现解耦，让设备和应用程序之间的通信更加灵活。</p></li><li><p><strong>可靠性</strong>: MQTT支持三种级别的服务质量（QoS），包括最多一次（QoS 0）、至少一次（QoS 1）和只有一次（QoS 2）。通过这些级别，可以根据应用程序的需求选择适当的消息传输可靠性。</p></li><li><p><strong>持久性会话</strong>: 客户端可以选择使用持久性会话，这意味着即使客户端断开连接，服务器仍然会保留客户端的订阅状态和未传递的消息。这对于设备的稳健性和状态管理非常有用。</p></li><li><p><strong>安全性</strong>: MQTT支持使用TLS&#x2F;SSL进行加密，以确保传输数据的安全性。此外，它还支持基于用户名和密码的身份验证机制，以及其他高级的安全特性。</p></li></ol><h2 id="物联网适合使用MQTT的原因"><a href="#物联网适合使用MQTT的原因" class="headerlink" title="物联网适合使用MQTT的原因"></a>物联网适合使用MQTT的原因</h2><ol><li><p><strong>低带宽、高延迟环境</strong>: MQTT的轻量级设计使其非常适合在带宽有限、延迟较高的网络环境中运行，这正是许多物联网应用所面临的情况。</p></li><li><p><strong>异构性</strong>: 物联网涉及各种设备，包括传感器、嵌入式系统、移动设备等，这些设备可能具有不同的处理能力和通信能力。MQTT作为一种通用的、轻量级的协议，可以轻松地在这些异构设备之间进行通信。</p></li><li><p><strong>解耦性</strong>: MQTT的发布&#x2F;订阅模式允许设备和应用程序之间进行解耦，从而提高了系统的灵活性和可扩展性。设备可以发布数据到特定的主题，而应用程序可以订阅感兴趣的主题，双方无需直接通信。</p></li><li><p><strong>可靠性和持久性</strong>: MQTT支持不同级别的服务质量，可以根据应用程序的需求选择适当的级别。它还支持持久性会话，保证了设备和应用程序之间的稳健通信。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/421109780&quot;&gt;MQTT协议，终于有人讲清楚了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Flutter&lt;/code&gt;中的MQTT库：&lt;a href=&quot;https://pub.dev/packages</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Jetpack_Compose</title>
    <link href="http://princesaoke.github.io/2024/04/03/Jetpack-Compose/"/>
    <id>http://princesaoke.github.io/2024/04/03/Jetpack-Compose/</id>
    <published>2024-04-02T16:19:28.000Z</published>
    <updated>2024-04-02T16:22:43.610Z</updated>
    
    <content type="html"><![CDATA[<p>声明式UI，类似<code>Flutter</code>。</p><p><a href="https://juejin.cn/post/7246665046257008696">从0上手Jetpack Compose，看这一篇就够了～</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;声明式UI，类似&lt;code&gt;Flutter&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://juejin.cn/post/7246665046257008696&quot;&gt;从0上手Jetpack Compose，看这一篇就够了～&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="移动端" scheme="http://princesaoke.github.io/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
    
    <category term="Android" scheme="http://princesaoke.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>防双击</title>
    <link href="http://princesaoke.github.io/2024/04/02/%E9%98%B2%E5%8F%8C%E5%87%BB/"/>
    <id>http://princesaoke.github.io/2024/04/02/%E9%98%B2%E5%8F%8C%E5%87%BB/</id>
    <published>2024-04-01T16:32:41.000Z</published>
    <updated>2024-04-01T16:34:24.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubleClickFilter</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">int</span> lastClickTime = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">int</span> lastKey = <span class="number">0</span>; <span class="comment">//区分不同点击事件</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">Function</span>() debounce(<span class="built_in">Function</span> fn, [<span class="built_in">int</span> key = <span class="number">0</span>, <span class="built_in">int</span> interval = <span class="number">500</span>]) &#123;</span><br><span class="line">    <span class="keyword">return</span> () &#123;</span><br><span class="line">      <span class="keyword">if</span> (key != lastKey) &#123;</span><br><span class="line">        lastClickTime = <span class="number">0</span>;</span><br><span class="line">        lastKey = key;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">int</span> currTime = <span class="built_in">DateTime</span>.now().millisecondsSinceEpoch;</span><br><span class="line">      <span class="keyword">if</span> (currTime - lastClickTime &gt; interval) &#123;</span><br><span class="line">        lastClickTime = currTime;</span><br><span class="line">        fn();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extension</span> FunctionExtension <span class="keyword">on</span> <span class="built_in">Function</span> &#123;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">[key]用于区分不同点击事件</span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">[interval]为防双击的时间间隔，单位毫秒</span></span></span><br><span class="line">  <span class="built_in">Function</span>() debounce([<span class="built_in">int</span> key = <span class="number">0</span>, <span class="built_in">int</span> interval = <span class="number">500</span>]) &#123;</span><br><span class="line">    <span class="keyword">return</span> DoubleClickFilter.debounce(<span class="keyword">this</span>, key, interval);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ElevatedButton(</span><br><span class="line">  onPressed: () &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;500毫秒内点击不会触发第二次&#x27;</span>);</span><br><span class="line">  &#125;.debounce(),</span><br><span class="line">  child: <span class="keyword">const</span> Text(<span class="string">&#x27;防双击按钮&#x27;</span>),</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h2&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    <category term="移动端" scheme="http://princesaoke.github.io/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter中的Slider</title>
    <link href="http://princesaoke.github.io/2024/04/01/Flutter%E4%B8%AD%E7%9A%84Slider/"/>
    <id>http://princesaoke.github.io/2024/04/01/Flutter%E4%B8%AD%E7%9A%84Slider/</id>
    <published>2024-04-01T15:55:52.000Z</published>
    <updated>2024-04-01T15:58:27.385Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更改Slider样式"><a href="#更改Slider样式" class="headerlink" title="更改Slider样式"></a>更改<code>Slider</code>样式</h2><p>要改变Flutter中默认的Slider的滑块样式，需要在Slider外包裹一层SliderTheme，在data中修改thumbShape。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">SliderTheme(</span><br><span class="line">  data: SliderTheme.of(context).copyWith(</span><br><span class="line">    trackHeight: <span class="number">10.</span>w,    <span class="comment">// 进度条轨道高度</span></span><br><span class="line">    thumbShape: MySliderThumbShape(enabledThumbRadius: <span class="number">8.</span>w, disabledThumbRadius: <span class="number">5.</span>w), <span class="comment">//滑块</span></span><br><span class="line">    overlayShape: RoundSliderOverlayShape(overlayRadius: <span class="number">7.</span>w),</span><br><span class="line">  ),</span><br><span class="line">  child: Slider(</span><br><span class="line">    value: voice.toDouble(),</span><br><span class="line">    min: <span class="number">0</span>,</span><br><span class="line">    max: <span class="number">100</span>,</span><br><span class="line">    divisions: <span class="number">100</span>,</span><br><span class="line">    activeColor: ColorConfig.color_2877FD,    <span class="comment">// 滑块左边轨道的颜色</span></span><br><span class="line">    inactiveColor: ColorConfig.color_F7F7F7,    <span class="comment">// 滑块右边轨道的颜色</span></span><br><span class="line">    onChanged: (v) &#123;</span><br><span class="line">      <span class="comment">// TODO</span></span><br><span class="line">    &#125;,</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="自定义滑块"><a href="#自定义滑块" class="headerlink" title="自定义滑块"></a>自定义滑块</h2><p><code>thumbShape</code>接受一个<code>SliderComponentShape</code>，因此自定义的滑块要继承该类，并实现<code>getPreferredSize</code>和<code>paint</code>两个方法。</p><p>其中<code>Size getPreferredSize(bool isEnabled, bool isDiscrete)</code>要返回滑块的大小，<code>isEnabled</code>为滑块是否被按下。</p><p>在<code>void paint</code>方法中实现滑块的绘制。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="language-markdown">自定义的音量Slider滑块</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySliderThumbShape</span> <span class="keyword">extends</span> <span class="title">SliderComponentShape</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> MySliderThumbShape(&#123;</span><br><span class="line">    <span class="keyword">this</span>.elevation = <span class="number">5</span>,</span><br><span class="line">    <span class="keyword">this</span>.pressedElevation = <span class="number">20</span>,</span><br><span class="line">    <span class="keyword">this</span>.enabledThumbRadius = <span class="number">8</span>,</span><br><span class="line">    <span class="keyword">this</span>.disabledThumbRadius,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> elevation;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> pressedElevation;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> enabledThumbRadius;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double?</span> disabledThumbRadius;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">double</span> <span class="keyword">get</span> _disabledThumbRadius =&gt; disabledThumbRadius ?? enabledThumbRadius;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Size getPreferredSize(<span class="built_in">bool</span> isEnabled, <span class="built_in">bool</span> isDiscrete) &#123;</span><br><span class="line">    <span class="keyword">return</span> Size.fromRadius(</span><br><span class="line">        isEnabled ? enabledThumbRadius : _disabledThumbRadius);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> paint(</span><br><span class="line">    PaintingContext context,</span><br><span class="line">    Offset center, &#123;</span><br><span class="line">    <span class="keyword">required</span> Animation&lt;<span class="built_in">double</span>&gt; activationAnimation,</span><br><span class="line">    <span class="keyword">required</span> Animation&lt;<span class="built_in">double</span>&gt; enableAnimation,</span><br><span class="line">    <span class="keyword">required</span> <span class="built_in">bool</span> isDiscrete,</span><br><span class="line">    <span class="keyword">required</span> TextPainter labelPainter,</span><br><span class="line">    <span class="keyword">required</span> RenderBox parentBox,</span><br><span class="line">    <span class="keyword">required</span> SliderThemeData sliderTheme,</span><br><span class="line">    <span class="keyword">required</span> TextDirection textDirection,</span><br><span class="line">    <span class="keyword">required</span> <span class="built_in">double</span> value,</span><br><span class="line">    <span class="keyword">required</span> <span class="built_in">double</span> textScaleFactor,</span><br><span class="line">    <span class="keyword">required</span> Size sizeWithOverflow,</span><br><span class="line">  &#125;) &#123;</span><br><span class="line">    <span class="keyword">final</span> Canvas canvas = context.canvas;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 阴影的补间值</span></span><br><span class="line">    <span class="keyword">final</span> Tween&lt;<span class="built_in">double</span>&gt; elevationTween = Tween&lt;<span class="built_in">double</span>&gt;(</span><br><span class="line">      begin: elevation,</span><br><span class="line">      end: pressedElevation,</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 阴影的瞬时值</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">double</span> evaluatedElevation =</span><br><span class="line">        elevationTween.evaluate(activationAnimation);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 滑块半径大小的补间值</span></span><br><span class="line">    <span class="keyword">final</span> Tween&lt;<span class="built_in">double</span>&gt; radiusTween = Tween&lt;<span class="built_in">double</span>&gt;(</span><br><span class="line">      begin: _disabledThumbRadius,</span><br><span class="line">      end: enabledThumbRadius,</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 滑块半径大小的瞬时值</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">double</span> radius = radiusTween.evaluate(enableAnimation);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> Path path = Path();</span><br><span class="line">    path.addArc(</span><br><span class="line">      Rect.fromCenter(center: center, width: <span class="number">2</span> * radius, height: <span class="number">2</span> * radius),</span><br><span class="line">      <span class="number">0</span>,</span><br><span class="line">      pi * <span class="number">2</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    canvas.drawShadow(path, Colors.black, evaluatedElevation, <span class="keyword">true</span>);</span><br><span class="line">    canvas.drawCircle(</span><br><span class="line">      center,</span><br><span class="line">      (radius + <span class="number">2</span>) * (<span class="number">1</span> + activationAnimation.value * <span class="number">0.5</span>),</span><br><span class="line">      Paint()..color = Colors.white,</span><br><span class="line">    );</span><br><span class="line">    canvas.drawCircle(</span><br><span class="line">      center,</span><br><span class="line">      radius * (<span class="number">1</span> + activationAnimation.value * <span class="number">0.5</span>),</span><br><span class="line">      Paint()..color = ColorConfig.color_2877FD,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;更改Slider样式&quot;&gt;&lt;a href=&quot;#更改Slider样式&quot; class=&quot;headerlink&quot; title=&quot;更改Slider样式&quot;&gt;&lt;/a&gt;更改&lt;code&gt;Slider&lt;/code&gt;样式&lt;/h2&gt;&lt;p&gt;要改变Flutter中默认的Slider的滑块样式</summary>
      
    
    
    
    <category term="移动端" scheme="http://princesaoke.github.io/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
    
    <category term="Flutter" scheme="http://princesaoke.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter带下拉建议列表的搜索框</title>
    <link href="http://princesaoke.github.io/2024/04/01/Flutter%E5%B8%A6%E4%B8%8B%E6%8B%89%E5%BB%BA%E8%AE%AE%E5%88%97%E8%A1%A8%E7%9A%84%E6%90%9C%E7%B4%A2%E6%A1%86/"/>
    <id>http://princesaoke.github.io/2024/04/01/Flutter%E5%B8%A6%E4%B8%8B%E6%8B%89%E5%BB%BA%E8%AE%AE%E5%88%97%E8%A1%A8%E7%9A%84%E6%90%9C%E7%B4%A2%E6%A1%86/</id>
    <published>2024-04-01T15:45:17.000Z</published>
    <updated>2024-04-01T15:55:25.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基于DropdownMenu实现"><a href="#基于DropdownMenu实现" class="headerlink" title="基于DropdownMenu实现"></a>基于<code>DropdownMenu</code>实现</h2><p>Flutter自带的<code>DropdownMenu</code>无法满足需求，在源码的基础上copy一份出来修改：</p><p>suggest_search_bar.dart：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:async&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SuggestSearchBar</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">带建议的搜索框</span></span></span><br><span class="line">  <span class="keyword">const</span> SuggestSearchBar(&#123;</span><br><span class="line">    <span class="keyword">super</span>.key,</span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">    <span class="keyword">this</span>.maxSuggestHeight = <span class="number">300</span>,</span><br><span class="line">    <span class="keyword">this</span>.hintText,</span><br><span class="line">    <span class="keyword">this</span>.onSelected,</span><br><span class="line">    <span class="keyword">this</span>.buildSuggestion,</span><br><span class="line">    <span class="keyword">this</span>.inputController,</span><br><span class="line">    <span class="keyword">this</span>.defaultSuggestion,</span><br><span class="line">    <span class="keyword">this</span>.trailingIcon,</span><br><span class="line">    <span class="keyword">this</span>.isCollapsed = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.contentPadding,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">搜索框的宽度，只有当<span class="code">`trailingIcon`</span>不为null时生效</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double?</span> width;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">建议栏的最大高度</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> maxSuggestHeight;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> hintText;</span><br><span class="line">  <span class="keyword">final</span> <span class="keyword">void</span> <span class="built_in">Function</span>(<span class="built_in">String?</span>)? onSelected;</span><br><span class="line">  <span class="keyword">final</span> TextEditingController? inputController;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;? defaultSuggestion;</span><br><span class="line">  <span class="keyword">final</span> Widget? trailingIcon;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">构建搜索建议</span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">传入一个带<span class="code">`String`</span>参数的方法，该参数为当前搜索框输入的值</span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">返回一个<span class="code">`Future&lt;List&lt;String&gt;&gt;`</span>，为建议值列表</span></span></span><br><span class="line">  <span class="keyword">final</span> Future&lt;<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; <span class="built_in">Function</span>(<span class="built_in">String</span>)? buildSuggestion;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">即搜索框[TextField]的[isCollapsed]</span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">bool</span> isCollapsed;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">即搜索框[TextField]的[contentPadding]</span></span></span><br><span class="line">  <span class="keyword">final</span> EdgeInsetsGeometry? contentPadding;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;SuggestSearchBar&gt; createState() =&gt; _SuggestSearchBarState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_SuggestSearchBarState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">SuggestSearchBar</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> StreamController&lt;<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; streamController = StreamController();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">late</span> TextEditingController _inputController;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    _inputController = widget.inputController ?? TextEditingController();</span><br><span class="line">    <span class="keyword">if</span> (widget.inputController == <span class="keyword">null</span> || widget.buildSuggestion == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    widget.inputController!.addListener(onChanged);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onChanged() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; suggestionList =</span><br><span class="line">        <span class="keyword">await</span> widget.buildSuggestion!.call(widget.inputController!.text);</span><br><span class="line">    streamController.add(suggestionList);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> StreamBuilder&lt;<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt;(</span><br><span class="line">      stream: streamController.stream,</span><br><span class="line">      initialData: widget.defaultSuggestion,</span><br><span class="line">      builder: (context, snapshot) &#123;</span><br><span class="line">        <span class="built_in">List</span>&lt;DropdownMenuEntry&lt;<span class="built_in">String</span>&gt;&gt; entryList = [];</span><br><span class="line">        <span class="keyword">if</span> (snapshot.data != <span class="keyword">null</span>) &#123;</span><br><span class="line">          entryList = snapshot.data!</span><br><span class="line">              .map((e) =&gt; DropdownMenuEntry&lt;<span class="built_in">String</span>&gt;(label: e, value: e))</span><br><span class="line">              .toList();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> CustomedDropdownMenu&lt;<span class="built_in">String</span>&gt;(</span><br><span class="line">          width: widget.width,</span><br><span class="line">          menuHeight: widget.maxSuggestHeight,</span><br><span class="line">          hintText: widget.hintText,</span><br><span class="line">          trailingIcon: widget.trailingIcon ??</span><br><span class="line">              InkWell(</span><br><span class="line">                  onTap: () &#123;</span><br><span class="line">                    _inputController.text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    widget.onSelected?.call(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                  &#125;,</span><br><span class="line">                  child: Icon(Icons.search)),</span><br><span class="line">          onSelected: widget.onSelected,</span><br><span class="line">          controller: _inputController,</span><br><span class="line">          dropdownMenuEntries: entryList,</span><br><span class="line">          enableFilter: <span class="keyword">true</span>,</span><br><span class="line">          requestFocusOnTap: <span class="keyword">true</span>,</span><br><span class="line">          isCollapsed: widget.isCollapsed,</span><br><span class="line">          contentPadding: widget.contentPadding,</span><br><span class="line">        );</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对源码的修改：</p><p>customed_dropdown_menu.dart：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Copyright 2014 The Flutter Authors. All rights reserved.</span></span><br><span class="line"><span class="comment">// Use of this source code is governed by a BSD-style license that can be</span></span><br><span class="line"><span class="comment">// found in the LICENSE file.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:math&#x27;</span> <span class="keyword">as</span> math;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/rendering.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/services.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Navigation shortcuts to move the selected menu items up or down.</span></span><br><span class="line"><span class="built_in">Map</span>&lt;ShortcutActivator, Intent&gt; _kMenuTraversalShortcuts =</span><br><span class="line">    &lt;ShortcutActivator, Intent&gt;&#123;</span><br><span class="line">  LogicalKeySet(LogicalKeyboardKey.arrowUp): <span class="keyword">const</span> _ArrowUpIntent(),</span><br><span class="line">  LogicalKeySet(LogicalKeyboardKey.arrowDown): <span class="keyword">const</span> _ArrowDownIntent(),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">double</span> _kMinimumWidth = <span class="number">112.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">double</span> _kDefaultHorizontalPadding = <span class="number">12.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="language-markdown">A dropdown menu that can be opened from a [TextField]. The selected</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">menu item is displayed in that field.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">This widget is used to help people make a choice from a menu and put the</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">selected item into the text input field. People can also filter the list based</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">on the text input or search one item in the menu list.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">The menu is composed of a list of [DropdownMenuEntry]s. People can provide information,</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">such as: label, leading icon or trailing icon for each entry. The [TextField]</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">will be updated based on the selection from the menu entries. The text field</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">will stay empty if the selected entry is disabled.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">The dropdown menu can be traversed by pressing the up or down key. During the</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">process, the corresponding item will be highlighted and the text field will be updated.</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">Disabled items will be skipped during traversal.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">The menu can be scrollable if not all items in the list are displayed at once.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">&#123;@tool dartpad&#125;</span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">This sample shows how to display outlined [DropdownMenu] and filled [DropdownMenu].</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="language-markdown">** See code in examples/api/lib/material/dropdown<span class="emphasis">_menu/dropdown_</span>menu.0.dart <span class="strong">**</span></span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown"><span class="strong">&#123;@end-tool&#125;</span></span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="language-markdown"><span class="strong">See also:</span></span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="language-markdown"><span class="strong">* [MenuAnchor], which is a widget used to mark the &quot;anchor&quot; for a set of submenus.</span></span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown"><span class="strong">  The [DropdownMenu] uses a [TextField] as the &quot;anchor&quot;.</span></span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown"><span class="strong">* [TextField], which is a text input widget that uses an [InputDecoration].</span></span></span></span><br><span class="line"><span class="comment">/// <span class="language-markdown"><span class="strong">* [DropdownMenuEntry], which is used to build the [MenuItemButton] in the [DropdownMenu] list.</span></span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomedDropdownMenu</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Creates a const [DropdownMenu].</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">The leading and trailing icons in the text field can be customized by using</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">[leadingIcon], [trailingIcon] and [selectedTrailingIcon] properties. They are</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">passed down to the [InputDecoration] properties, and will override values</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">in the [InputDecoration.prefixIcon] and [InputDecoration.suffixIcon].</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Except leading and trailing icons, the text field can be configured by the</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">[InputDecorationTheme] property. The menu can be configured by the [menuStyle].</span></span></span></span><br><span class="line">  <span class="keyword">const</span> CustomedDropdownMenu(&#123;</span><br><span class="line">    <span class="keyword">super</span>.key,</span><br><span class="line">    <span class="keyword">this</span>.enabled = <span class="keyword">true</span>,</span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">    <span class="keyword">this</span>.menuHeight,</span><br><span class="line">    <span class="keyword">this</span>.leadingIcon,</span><br><span class="line">    <span class="keyword">this</span>.trailingIcon,</span><br><span class="line">    <span class="keyword">this</span>.label,</span><br><span class="line">    <span class="keyword">this</span>.hintText,</span><br><span class="line">    <span class="keyword">this</span>.helperText,</span><br><span class="line">    <span class="keyword">this</span>.errorText,</span><br><span class="line">    <span class="keyword">this</span>.selectedTrailingIcon,</span><br><span class="line">    <span class="keyword">this</span>.enableFilter = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.enableSearch = <span class="keyword">true</span>,</span><br><span class="line">    <span class="keyword">this</span>.textStyle,</span><br><span class="line">    <span class="keyword">this</span>.inputDecorationTheme,</span><br><span class="line">    <span class="keyword">this</span>.menuStyle,</span><br><span class="line">    <span class="keyword">this</span>.controller,</span><br><span class="line">    <span class="keyword">this</span>.initialSelection,</span><br><span class="line">    <span class="keyword">this</span>.onSelected,</span><br><span class="line">    <span class="keyword">this</span>.requestFocusOnTap,</span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">this</span>.dropdownMenuEntries,</span><br><span class="line">    <span class="keyword">this</span>.isCollapsed = <span class="keyword">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.contentPadding,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Determine if the [DropdownMenu] is enabled.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to true.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">bool</span> enabled;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Determine the width of the [DropdownMenu].</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">If this is null, the width of the [DropdownMenu] will be the same as the width of the widest</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">menu item plus the width of the leading/trailing icon.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double?</span> width;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Determine the height of the menu.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">If this is null, the menu will display as many items as possible on the screen.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double?</span> menuHeight;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">An optional Icon at the front of the text input field.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to null. If this is not null, the menu items will have extra paddings to be aligned</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">with the text in the text field.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> Widget? leadingIcon;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">An optional icon at the end of the text field.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to an [Icon] with [Icons.arrow<span class="emphasis">_drop_</span>down].</span></span></span></span><br><span class="line">  <span class="keyword">final</span> Widget? trailingIcon;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Optional widget that describes the input field.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">When the input field is empty and unfocused, the label is displayed on</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">top of the input field (i.e., at the same location on the screen where</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">text may be entered in the input field). When the input field receives</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">focus (or if the field is non-empty), the label moves above, either</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">vertically adjacent to, or to the center of the input field.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to null.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> Widget? label;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Text that suggests what sort of input the field accepts.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to null;</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> hintText;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Text that provides context about the [DropdownMenu]&#x27;s value, such</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">as how the value will be used.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">If non-null, the text is displayed below the input field, in</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">the same location as [errorText]. If a non-null [errorText] value is</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">specified then the helper text is not shown.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to null;</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">See also:</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">* [InputDecoration.helperText], which is the text that provides context about the [InputDecorator.child]&#x27;s value.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> helperText;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Text that appears below the input field and the border to show the error message.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">If non-null, the border&#x27;s color animates to red and the [helperText] is not shown.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to null;</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">See also:</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">* [InputDecoration.errorText], which is the text that appears below the [InputDecorator.child] and the border.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> errorText;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">An optional icon at the end of the text field to indicate that the text</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">field is pressed.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to an [Icon] with [Icons.arrow<span class="emphasis">_drop_</span>up].</span></span></span></span><br><span class="line">  <span class="keyword">final</span> Widget? selectedTrailingIcon;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Determine if the menu list can be filtered by the text input.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to false.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">bool</span> enableFilter;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Determine if the first item that matches the text input can be highlighted.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to true as the search function could be commonly used.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">bool</span> enableSearch;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">The text style for the [TextField] of the [DropdownMenu];</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to the overall theme&#x27;s [TextTheme.labelLarge]</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">if the dropdown menu theme&#x27;s value is null.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> TextStyle? textStyle;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defines the default appearance of [InputDecoration] to show around the text field.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">By default, shows a outlined text field.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> InputDecorationTheme? inputDecorationTheme;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">The [MenuStyle] that defines the visual attributes of the menu.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">The default width of the menu is set to the width of the text field.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> MenuStyle? menuStyle;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Controls the text being edited or selected in the menu.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">If null, this widget will create its own [TextEditingController].</span></span></span></span><br><span class="line">  <span class="keyword">final</span> TextEditingController? controller;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">The value used to for an initial selection.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to null.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> T? initialSelection;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">The callback is called when a selection is made.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to null. If null, only the text field is updated.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> ValueChanged&lt;T?&gt;? onSelected;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Determine if the dropdown button requests focus and the on-screen virtual</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">keyboard is shown in response to a touch event.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">By default, on mobile platforms, tapping on the text field and opening</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">the menu will not cause a focus request and the virtual keyboard will not</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">appear. The default behavior for desktop platforms is for the dropdown to</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">take the focus.</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Defaults to null. Setting this field to true or false, rather than allowing</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">the implementation to choose based on the platform, can be useful for</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">applications that want to override the default behavior.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">bool?</span> requestFocusOnTap;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">Descriptions of the menu items in the [DropdownMenu].</span></span></span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">This is a required parameter. It is recommended that at least one [DropdownMenuEntry]</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">is provided. If this is an empty list, the menu will be empty and only</span></span></span></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">contain space for padding.</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">List</span>&lt;DropdownMenuEntry&lt;T&gt;&gt; dropdownMenuEntries;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">即搜索框[TextField]的[isCollapsed]</span></span></span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">bool</span> isCollapsed;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown"><span class="strong">即搜索框[TextField]的[contentPadding]</span></span></span></span><br><span class="line">  <span class="keyword">final</span> EdgeInsetsGeometry? contentPadding;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;CustomedDropdownMenu&lt;T&gt;&gt; createState() =&gt;</span><br><span class="line">      _CustomedDropdownMenuState&lt;T&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_CustomedDropdownMenuState</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">CustomedDropdownMenu</span>&lt;<span class="title">T</span>&gt;&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> GlobalKey _anchorKey = GlobalKey();</span><br><span class="line">  <span class="keyword">final</span> GlobalKey _leadingKey = GlobalKey();</span><br><span class="line">  <span class="keyword">final</span> MenuController _controller = MenuController();</span><br><span class="line">  <span class="keyword">late</span> <span class="keyword">final</span> TextEditingController _textEditingController;</span><br><span class="line">  <span class="keyword">late</span> <span class="built_in">bool</span> _enableFilter;</span><br><span class="line">  <span class="keyword">late</span> <span class="built_in">List</span>&lt;DropdownMenuEntry&lt;T&gt;&gt; filteredEntries;</span><br><span class="line">  <span class="built_in">List</span>&lt;Widget&gt;? _initialMenu;</span><br><span class="line">  <span class="built_in">int?</span> currentHighlight;</span><br><span class="line">  <span class="built_in">double?</span> leadingPadding;</span><br><span class="line">  <span class="built_in">bool</span> _menuHasEnabledItem = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    _textEditingController = widget.controller ?? TextEditingController();</span><br><span class="line">    _enableFilter = widget.enableFilter;</span><br><span class="line">    filteredEntries = widget.dropdownMenuEntries;</span><br><span class="line">    _menuHasEnabledItem =</span><br><span class="line">        filteredEntries.any((DropdownMenuEntry&lt;T&gt; entry) =&gt; entry.enabled);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> index = filteredEntries.indexWhere(</span><br><span class="line">        (DropdownMenuEntry&lt;T&gt; entry) =&gt; entry.value == widget.initialSelection);</span><br><span class="line">    <span class="keyword">if</span> (index != <span class="number">-1</span>) &#123;</span><br><span class="line">      _textEditingController.text = filteredEntries[index].label;</span><br><span class="line">      _textEditingController.selection =</span><br><span class="line">          TextSelection.collapsed(offset: _textEditingController.text.length);</span><br><span class="line">    &#125;</span><br><span class="line">    refreshLeadingPadding();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> didUpdateWidget(CustomedDropdownMenu&lt;T&gt; oldWidget) &#123;</span><br><span class="line">    <span class="keyword">super</span>.didUpdateWidget(oldWidget);</span><br><span class="line">    <span class="keyword">if</span> (oldWidget.dropdownMenuEntries != widget.dropdownMenuEntries) &#123;</span><br><span class="line">      _menuHasEnabledItem =</span><br><span class="line">          filteredEntries.any((DropdownMenuEntry&lt;T&gt; entry) =&gt; entry.enabled);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (oldWidget.leadingIcon != widget.leadingIcon) &#123;</span><br><span class="line">      refreshLeadingPadding();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (oldWidget.initialSelection != widget.initialSelection) &#123;</span><br><span class="line">      <span class="keyword">final</span> <span class="built_in">int</span> index = filteredEntries.indexWhere(</span><br><span class="line">          (DropdownMenuEntry&lt;T&gt; entry) =&gt;</span><br><span class="line">              entry.value == widget.initialSelection);</span><br><span class="line">      <span class="keyword">if</span> (index != <span class="number">-1</span>) &#123;</span><br><span class="line">        _textEditingController.text = filteredEntries[index].label;</span><br><span class="line">        _textEditingController.selection =</span><br><span class="line">            TextSelection.collapsed(offset: _textEditingController.text.length);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">bool</span> canRequestFocus() &#123;</span><br><span class="line">    <span class="keyword">if</span> (widget.requestFocusOnTap != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> widget.requestFocusOnTap!;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (Theme.of(context).platform) &#123;</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.iOS:</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.android:</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.fuchsia:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.macOS:</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.linux:</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.windows:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> refreshLeadingPadding() &#123;</span><br><span class="line">    WidgetsBinding.instance.addPostFrameCallback((_) &#123;</span><br><span class="line">      setState(() &#123;</span><br><span class="line">        leadingPadding = getWidth(_leadingKey);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">double?</span> getWidth(GlobalKey key) &#123;</span><br><span class="line">    <span class="keyword">final</span> BuildContext? context = key.currentContext;</span><br><span class="line">    <span class="keyword">if</span> (context != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">final</span> RenderBox box = context.findRenderObject()! <span class="keyword">as</span> RenderBox;</span><br><span class="line">      <span class="keyword">return</span> box.size.width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">List</span>&lt;DropdownMenuEntry&lt;T&gt;&gt; filter(<span class="built_in">List</span>&lt;DropdownMenuEntry&lt;T&gt;&gt; entries,</span><br><span class="line">      TextEditingController textEditingController) &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">String</span> filterText = textEditingController.text.toLowerCase();</span><br><span class="line">    <span class="keyword">return</span> entries</span><br><span class="line">        .where((DropdownMenuEntry&lt;T&gt; entry) =&gt;</span><br><span class="line">            entry.label.toLowerCase().contains(filterText))</span><br><span class="line">        .toList();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">int?</span> search(<span class="built_in">List</span>&lt;DropdownMenuEntry&lt;T&gt;&gt; entries,</span><br><span class="line">      TextEditingController textEditingController) &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">String</span> searchText = textEditingController.value.text.toLowerCase();</span><br><span class="line">    <span class="keyword">if</span> (searchText.isEmpty) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> index = entries.indexWhere((DropdownMenuEntry&lt;T&gt; entry) =&gt;</span><br><span class="line">        entry.label.toLowerCase().contains(searchText));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> index != <span class="number">-1</span> ? index : <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">List</span>&lt;Widget&gt; _buildButtons(<span class="built_in">List</span>&lt;DropdownMenuEntry&lt;T&gt;&gt; filteredEntries,</span><br><span class="line">      TextEditingController textEditingController, TextDirection textDirection,</span><br><span class="line">      &#123;<span class="built_in">int?</span> focusedIndex&#125;) &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">List</span>&lt;Widget&gt; result = &lt;Widget&gt;[];</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">double</span> padding = leadingPadding ?? _kDefaultHorizontalPadding;</span><br><span class="line">    <span class="keyword">final</span> ButtonStyle defaultStyle;</span><br><span class="line">    <span class="keyword">switch</span> (textDirection) &#123;</span><br><span class="line">      <span class="keyword">case</span> TextDirection.rtl:</span><br><span class="line">        defaultStyle = MenuItemButton.styleFrom(</span><br><span class="line">          padding:</span><br><span class="line">              EdgeInsets.only(left: _kDefaultHorizontalPadding, right: padding),</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> TextDirection.ltr:</span><br><span class="line">        defaultStyle = MenuItemButton.styleFrom(</span><br><span class="line">          padding:</span><br><span class="line">              EdgeInsets.only(left: padding, right: _kDefaultHorizontalPadding),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; filteredEntries.length; i++) &#123;</span><br><span class="line">      <span class="keyword">final</span> DropdownMenuEntry&lt;T&gt; entry = filteredEntries[i];</span><br><span class="line">      ButtonStyle effectiveStyle = entry.style ?? defaultStyle;</span><br><span class="line">      <span class="keyword">final</span> Color focusedBackgroundColor = effectiveStyle.foregroundColor</span><br><span class="line">              ?.resolve(&lt;MaterialState&gt;&#123;MaterialState.focused&#125;) ??</span><br><span class="line">          Theme.of(context).colorScheme.onSurface;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Simulate the focused state because the text field should always be focused</span></span><br><span class="line">      <span class="comment">// during traversal. If the menu item has a custom foreground color, the &quot;focused&quot;</span></span><br><span class="line">      <span class="comment">// color will also change to foregroundColor.withOpacity(0.12).</span></span><br><span class="line">      effectiveStyle = entry.enabled &amp;&amp; i == focusedIndex</span><br><span class="line">          ? effectiveStyle.copyWith(</span><br><span class="line">              backgroundColor: MaterialStatePropertyAll&lt;Color&gt;(</span><br><span class="line">                  focusedBackgroundColor.withOpacity(<span class="number">0.12</span>)))</span><br><span class="line">          : effectiveStyle;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">final</span> MenuItemButton menuItemButton = MenuItemButton(</span><br><span class="line">        style: effectiveStyle,</span><br><span class="line">        leadingIcon: entry.leadingIcon,</span><br><span class="line">        trailingIcon: entry.trailingIcon,</span><br><span class="line">        onPressed: entry.enabled</span><br><span class="line">            ? () &#123;</span><br><span class="line">                textEditingController.text = entry.label;</span><br><span class="line">                textEditingController.selection = TextSelection.collapsed(</span><br><span class="line">                    offset: textEditingController.text.length);</span><br><span class="line">                currentHighlight = widget.enableSearch ? i : <span class="keyword">null</span>;</span><br><span class="line">                widget.onSelected?.call(entry.value);</span><br><span class="line">              &#125;</span><br><span class="line">            : <span class="keyword">null</span>,</span><br><span class="line">        requestFocusOnHover: <span class="keyword">false</span>,</span><br><span class="line">        child: Text(entry.label),</span><br><span class="line">      );</span><br><span class="line">      result.add(menuItemButton);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> handleUpKeyInvoke(_) =&gt; setState(() &#123;</span><br><span class="line">        <span class="keyword">if</span> (!_menuHasEnabledItem || !_controller.isOpen) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        _enableFilter = <span class="keyword">false</span>;</span><br><span class="line">        currentHighlight ??= <span class="number">0</span>;</span><br><span class="line">        currentHighlight = (currentHighlight! - <span class="number">1</span>) % filteredEntries.length;</span><br><span class="line">        <span class="keyword">while</span> (!filteredEntries[currentHighlight!].enabled) &#123;</span><br><span class="line">          currentHighlight = (currentHighlight! - <span class="number">1</span>) % filteredEntries.length;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">String</span> currentLabel = filteredEntries[currentHighlight!].label;</span><br><span class="line">        _textEditingController.text = currentLabel;</span><br><span class="line">        _textEditingController.selection =</span><br><span class="line">            TextSelection.collapsed(offset: _textEditingController.text.length);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> handleDownKeyInvoke(_) =&gt; setState(() &#123;</span><br><span class="line">        <span class="keyword">if</span> (!_menuHasEnabledItem || !_controller.isOpen) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        _enableFilter = <span class="keyword">false</span>;</span><br><span class="line">        currentHighlight ??= <span class="number">-1</span>;</span><br><span class="line">        currentHighlight = (currentHighlight! + <span class="number">1</span>) % filteredEntries.length;</span><br><span class="line">        <span class="keyword">while</span> (!filteredEntries[currentHighlight!].enabled) &#123;</span><br><span class="line">          currentHighlight = (currentHighlight! + <span class="number">1</span>) % filteredEntries.length;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">String</span> currentLabel = filteredEntries[currentHighlight!].label;</span><br><span class="line">        _textEditingController.text = currentLabel;</span><br><span class="line">        _textEditingController.selection =</span><br><span class="line">            TextSelection.collapsed(offset: _textEditingController.text.length);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> handlePressed(MenuController controller) &#123;</span><br><span class="line">    <span class="keyword">if</span> (controller.isOpen) &#123;</span><br><span class="line">      currentHighlight = <span class="keyword">null</span>;</span><br><span class="line">      controller.close();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// close to open</span></span><br><span class="line">      <span class="keyword">if</span> (_textEditingController.text.isNotEmpty) &#123;</span><br><span class="line">        _enableFilter = <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      controller.open();</span><br><span class="line">    &#125;</span><br><span class="line">    setState(() &#123;&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> dispose() &#123;</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">final</span> TextDirection textDirection = Directionality.of(context);</span><br><span class="line">    _initialMenu ??= _buildButtons(</span><br><span class="line">        widget.dropdownMenuEntries, _textEditingController, textDirection);</span><br><span class="line">    <span class="keyword">final</span> DropdownMenuThemeData theme = DropdownMenuTheme.of(context);</span><br><span class="line">    <span class="keyword">final</span> DropdownMenuThemeData defaults = _DropdownMenuDefaultsM3(context);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_enableFilter) &#123;</span><br><span class="line">      filteredEntries =</span><br><span class="line">          filter(widget.dropdownMenuEntries, _textEditingController);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (widget.enableSearch) &#123;</span><br><span class="line">      currentHighlight = search(filteredEntries, _textEditingController);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">List</span>&lt;Widget&gt; menu = _buildButtons(</span><br><span class="line">        filteredEntries, _textEditingController, textDirection,</span><br><span class="line">        focusedIndex: currentHighlight);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> TextStyle? effectiveTextStyle =</span><br><span class="line">        widget.textStyle ?? theme.textStyle ?? defaults.textStyle;</span><br><span class="line"></span><br><span class="line">    MenuStyle? effectiveMenuStyle =</span><br><span class="line">        widget.menuStyle ?? theme.menuStyle ?? defaults.menuStyle!;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">double?</span> anchorWidth = getWidth(_anchorKey);</span><br><span class="line">    <span class="keyword">if</span> (widget.width != <span class="keyword">null</span>) &#123;</span><br><span class="line">      effectiveMenuStyle = effectiveMenuStyle.copyWith(</span><br><span class="line">          minimumSize:</span><br><span class="line">              MaterialStatePropertyAll&lt;Size?&gt;(Size(widget.width!, <span class="number">0.0</span>)));</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (anchorWidth != <span class="keyword">null</span>) &#123;</span><br><span class="line">      effectiveMenuStyle = effectiveMenuStyle.copyWith(</span><br><span class="line">          minimumSize: MaterialStatePropertyAll&lt;Size?&gt;(Size(anchorWidth, <span class="number">0.0</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (widget.menuHeight != <span class="keyword">null</span>) &#123;</span><br><span class="line">      effectiveMenuStyle = effectiveMenuStyle.copyWith(</span><br><span class="line">          maximumSize: MaterialStatePropertyAll&lt;Size&gt;(</span><br><span class="line">              Size(<span class="built_in">double</span>.infinity, widget.menuHeight!)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> InputDecorationTheme effectiveInputDecorationTheme =</span><br><span class="line">        widget.inputDecorationTheme ??</span><br><span class="line">            theme.inputDecorationTheme ??</span><br><span class="line">            defaults.inputDecorationTheme!;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> MouseCursor effectiveMouseCursor =</span><br><span class="line">        canRequestFocus() ? SystemMouseCursors.text : SystemMouseCursors.click;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Shortcuts(</span><br><span class="line">      shortcuts: _kMenuTraversalShortcuts,</span><br><span class="line">      child: Actions(</span><br><span class="line">        actions: &lt;<span class="built_in">Type</span>, Action&lt;Intent&gt;&gt;&#123;</span><br><span class="line">          _ArrowUpIntent: CallbackAction&lt;_ArrowUpIntent&gt;(</span><br><span class="line">            onInvoke: handleUpKeyInvoke,</span><br><span class="line">          ),</span><br><span class="line">          _ArrowDownIntent: CallbackAction&lt;_ArrowDownIntent&gt;(</span><br><span class="line">            onInvoke: handleDownKeyInvoke,</span><br><span class="line">          ),</span><br><span class="line">        &#125;,</span><br><span class="line">        child: MenuAnchor(</span><br><span class="line">          style: effectiveMenuStyle,</span><br><span class="line">          controller: _controller,</span><br><span class="line">          menuChildren: menu,</span><br><span class="line">          crossAxisUnconstrained: <span class="keyword">false</span>, <span class="comment">// 将建议设置为与搜索框宽度相同</span></span><br><span class="line">          onClose: () &#123;</span><br><span class="line">            <span class="comment">// setState(() &#123;&#125;);</span></span><br><span class="line">          &#125;, <span class="comment">// To update the status of the IconButton</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">// 搜索框布局</span></span><br><span class="line">          builder:</span><br><span class="line">              (BuildContext context, MenuController controller, Widget? child) &#123;</span><br><span class="line">            <span class="keyword">assert</span>(_initialMenu != <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">final</span> Widget? trailingButton;</span><br><span class="line">            <span class="keyword">if</span> (widget.trailingIcon != <span class="keyword">null</span>) &#123;</span><br><span class="line">              trailingButton = Padding(</span><br><span class="line">                padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">4.0</span>),</span><br><span class="line">                child: IconButton(</span><br><span class="line">                  isSelected: controller.isOpen,</span><br><span class="line">                  icon:</span><br><span class="line">                      widget.trailingIcon ?? <span class="keyword">const</span> Icon(Icons.arrow_drop_down),</span><br><span class="line">                  selectedIcon: widget.selectedTrailingIcon ??</span><br><span class="line">                      <span class="keyword">const</span> Icon(Icons.arrow_drop_up),</span><br><span class="line">                  onPressed: () &#123;</span><br><span class="line">                    handlePressed(controller);</span><br><span class="line">                  &#125;,</span><br><span class="line">                ),</span><br><span class="line">              );</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              trailingButton = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> Widget leadingButton = Padding(</span><br><span class="line">                padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">8.0</span>),</span><br><span class="line">                child: widget.leadingIcon ?? <span class="keyword">const</span> SizedBox());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> _DropdownMenuBody(</span><br><span class="line">              width: widget.width,</span><br><span class="line">              children: &lt;Widget&gt;[</span><br><span class="line">                TextField(</span><br><span class="line">                    key: _anchorKey,</span><br><span class="line">                    mouseCursor: effectiveMouseCursor,</span><br><span class="line">                    canRequestFocus: canRequestFocus(),</span><br><span class="line">                    enableInteractiveSelection: canRequestFocus(),</span><br><span class="line">                    textAlignVertical: TextAlignVertical.center,</span><br><span class="line">                    style: effectiveTextStyle,</span><br><span class="line">                    controller: _textEditingController,</span><br><span class="line">                    onEditingComplete: () &#123;</span><br><span class="line">                      <span class="keyword">if</span> (currentHighlight != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">final</span> DropdownMenuEntry&lt;T&gt; entry =</span><br><span class="line">                            filteredEntries[currentHighlight!];</span><br><span class="line">                        <span class="keyword">if</span> (entry.enabled) &#123;</span><br><span class="line">                          _textEditingController.text = entry.label;</span><br><span class="line">                          _textEditingController.selection =</span><br><span class="line">                              TextSelection.collapsed(</span><br><span class="line">                                  offset: _textEditingController.text.length);</span><br><span class="line">                          widget.onSelected?.call(entry.value);</span><br><span class="line">                        &#125;</span><br><span class="line">                      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        widget.onSelected?.call(<span class="keyword">null</span>);</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="keyword">if</span> (!widget.enableSearch) &#123;</span><br><span class="line">                        currentHighlight = <span class="keyword">null</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="keyword">if</span> (_textEditingController.text.isNotEmpty) &#123;</span><br><span class="line">                        controller.close();</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    onTap: () &#123;</span><br><span class="line">                      handlePressed(controller);</span><br><span class="line">                    &#125;,</span><br><span class="line">                    onChanged: (<span class="built_in">String</span> text) &#123;</span><br><span class="line">                      controller.open();</span><br><span class="line">                      setState(() &#123;</span><br><span class="line">                        filteredEntries = widget.dropdownMenuEntries;</span><br><span class="line">                        _enableFilter = widget.enableFilter;</span><br><span class="line">                      &#125;);</span><br><span class="line">                    &#125;,</span><br><span class="line">                    decoration: InputDecoration(</span><br><span class="line">                      enabled: widget.enabled,</span><br><span class="line">                      label: widget.label,</span><br><span class="line">                      hintText: widget.hintText,</span><br><span class="line">                      helperText: widget.helperText,</span><br><span class="line">                      errorText: widget.errorText,</span><br><span class="line">                      contentPadding: widget.contentPadding,</span><br><span class="line">                      isCollapsed: widget.isCollapsed,</span><br><span class="line">                      prefixIcon: widget.leadingIcon != <span class="keyword">null</span></span><br><span class="line">                          ? Container(</span><br><span class="line">                              key: _leadingKey, child: widget.leadingIcon)</span><br><span class="line">                          : <span class="keyword">null</span>,</span><br><span class="line">                      suffixIcon: trailingButton,</span><br><span class="line">                    ).applyDefaults(effectiveInputDecorationTheme)),</span><br><span class="line">                <span class="keyword">for</span> (Widget c <span class="keyword">in</span> _initialMenu!) c,</span><br><span class="line">                <span class="keyword">if</span> (trailingButton != <span class="keyword">null</span>) trailingButton,</span><br><span class="line">                leadingButton,</span><br><span class="line">              ],</span><br><span class="line">            );</span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_ArrowUpIntent</span> <span class="keyword">extends</span> <span class="title">Intent</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> _ArrowUpIntent();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_ArrowDownIntent</span> <span class="keyword">extends</span> <span class="title">Intent</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> _ArrowDownIntent();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_DropdownMenuBody</span> <span class="keyword">extends</span> <span class="title">MultiChildRenderObjectWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> _DropdownMenuBody(&#123;</span><br><span class="line">    <span class="keyword">super</span>.children,</span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double?</span> width;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _RenderDropdownMenuBody createRenderObject(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> _RenderDropdownMenuBody(</span><br><span class="line">      width: width,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_DropdownMenuBodyParentData</span> <span class="keyword">extends</span> <span class="title">ContainerBoxParentData</span>&lt;<span class="title">RenderBox</span>&gt; </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_RenderDropdownMenuBody</span> <span class="keyword">extends</span> <span class="title">RenderBox</span></span></span><br><span class="line"><span class="class">    <span class="title">with</span></span></span><br><span class="line"><span class="class">        <span class="title">ContainerRenderObjectMixin</span>&lt;<span class="title">RenderBox</span>, <span class="title">_DropdownMenuBodyParentData</span>&gt;,</span></span><br><span class="line"><span class="class">        <span class="title">RenderBoxContainerDefaultsMixin</span>&lt;<span class="title">RenderBox</span>,</span></span><br><span class="line"><span class="class">            <span class="title">_DropdownMenuBodyParentData</span>&gt; </span>&#123;</span><br><span class="line">  _RenderDropdownMenuBody(&#123;</span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double?</span> width;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> setupParentData(RenderBox child) &#123;</span><br><span class="line">    <span class="keyword">if</span> (child.parentData <span class="keyword">is</span>! _DropdownMenuBodyParentData) &#123;</span><br><span class="line">      child.parentData = _DropdownMenuBodyParentData();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> performLayout() &#123;</span><br><span class="line">    <span class="keyword">final</span> BoxConstraints constraints = <span class="keyword">this</span>.constraints;</span><br><span class="line">    <span class="built_in">double</span> maxWidth = <span class="number">0.0</span>;</span><br><span class="line">    <span class="built_in">double?</span> maxHeight;</span><br><span class="line">    RenderBox? child = firstChild;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> BoxConstraints innerConstraints = BoxConstraints(</span><br><span class="line">      maxWidth: width ?? computeMaxIntrinsicWidth(constraints.maxWidth),</span><br><span class="line">      maxHeight: computeMaxIntrinsicHeight(constraints.maxHeight),</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">while</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (child == firstChild) &#123;</span><br><span class="line">        child.layout(innerConstraints, parentUsesSize: <span class="keyword">true</span>);</span><br><span class="line">        maxHeight ??= child.size.height;</span><br><span class="line">        <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">            child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">        <span class="keyword">assert</span>(child.parentData == childParentData);</span><br><span class="line">        child = childParentData.nextSibling;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      child.layout(innerConstraints, parentUsesSize: <span class="keyword">true</span>);</span><br><span class="line">      <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">          child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">      childParentData.offset = Offset.zero;</span><br><span class="line">      maxWidth = math.max(maxWidth, child.size.width);</span><br><span class="line">      maxHeight ??= child.size.height;</span><br><span class="line">      <span class="keyword">assert</span>(child.parentData == childParentData);</span><br><span class="line">      child = childParentData.nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span>(maxHeight != <span class="keyword">null</span>);</span><br><span class="line">    maxWidth = math.max(_kMinimumWidth, maxWidth);</span><br><span class="line">    size = constraints.constrain(Size(width ?? maxWidth, maxHeight!));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> paint(PaintingContext context, Offset offset) &#123;</span><br><span class="line">    <span class="keyword">final</span> RenderBox? child = firstChild;</span><br><span class="line">    <span class="keyword">if</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">          child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">      context.paintChild(child, offset + childParentData.offset);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Size computeDryLayout(BoxConstraints constraints) &#123;</span><br><span class="line">    <span class="keyword">final</span> BoxConstraints constraints = <span class="keyword">this</span>.constraints;</span><br><span class="line">    <span class="built_in">double</span> maxWidth = <span class="number">0.0</span>;</span><br><span class="line">    <span class="built_in">double?</span> maxHeight;</span><br><span class="line">    RenderBox? child = firstChild;</span><br><span class="line">    <span class="keyword">final</span> BoxConstraints innerConstraints = BoxConstraints(</span><br><span class="line">      maxWidth: width ?? computeMaxIntrinsicWidth(constraints.maxWidth),</span><br><span class="line">      maxHeight: computeMaxIntrinsicHeight(constraints.maxHeight),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (child == firstChild) &#123;</span><br><span class="line">        <span class="keyword">final</span> Size childSize = child.getDryLayout(innerConstraints);</span><br><span class="line">        maxHeight ??= childSize.height;</span><br><span class="line">        <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">            child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">        <span class="keyword">assert</span>(child.parentData == childParentData);</span><br><span class="line">        child = childParentData.nextSibling;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">final</span> Size childSize = child.getDryLayout(innerConstraints);</span><br><span class="line">      <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">          child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">      childParentData.offset = Offset.zero;</span><br><span class="line">      maxWidth = math.max(maxWidth, childSize.width);</span><br><span class="line">      maxHeight ??= childSize.height;</span><br><span class="line">      <span class="keyword">assert</span>(child.parentData == childParentData);</span><br><span class="line">      child = childParentData.nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span>(maxHeight != <span class="keyword">null</span>);</span><br><span class="line">    maxWidth = math.max(_kMinimumWidth, maxWidth);</span><br><span class="line">    <span class="keyword">return</span> constraints.constrain(Size(width ?? maxWidth, maxHeight!));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">double</span> computeMinIntrinsicWidth(<span class="built_in">double</span> height) &#123;</span><br><span class="line">    RenderBox? child = firstChild;</span><br><span class="line">    <span class="built_in">double</span> width = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (child == firstChild) &#123;</span><br><span class="line">        <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">            child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">        child = childParentData.nextSibling;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">final</span> <span class="built_in">double</span> maxIntrinsicWidth = child.getMinIntrinsicWidth(height);</span><br><span class="line">      <span class="keyword">if</span> (child == lastChild) &#123;</span><br><span class="line">        width += maxIntrinsicWidth;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (child == childBefore(lastChild!)) &#123;</span><br><span class="line">        width += maxIntrinsicWidth;</span><br><span class="line">      &#125;</span><br><span class="line">      width = math.max(width, maxIntrinsicWidth);</span><br><span class="line">      <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">          child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">      child = childParentData.nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> math.max(width, _kMinimumWidth);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">double</span> computeMaxIntrinsicWidth(<span class="built_in">double</span> height) &#123;</span><br><span class="line">    RenderBox? child = firstChild;</span><br><span class="line">    <span class="built_in">double</span> width = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (child == firstChild) &#123;</span><br><span class="line">        <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">            child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">        child = childParentData.nextSibling;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">final</span> <span class="built_in">double</span> maxIntrinsicWidth = child.getMaxIntrinsicWidth(height);</span><br><span class="line">      <span class="comment">// Add the width of leading Icon.</span></span><br><span class="line">      <span class="keyword">if</span> (child == lastChild) &#123;</span><br><span class="line">        width += maxIntrinsicWidth;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// Add the width of trailing Icon.</span></span><br><span class="line">      <span class="keyword">if</span> (child == childBefore(lastChild!)) &#123;</span><br><span class="line">        width += maxIntrinsicWidth;</span><br><span class="line">      &#125;</span><br><span class="line">      width = math.max(width, maxIntrinsicWidth);</span><br><span class="line">      <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">          child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">      child = childParentData.nextSibling;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> math.max(width, _kMinimumWidth);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">double</span> computeMinIntrinsicHeight(<span class="built_in">double</span> height) &#123;</span><br><span class="line">    <span class="keyword">final</span> RenderBox? child = firstChild;</span><br><span class="line">    <span class="built_in">double</span> width = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">      width = math.max(width, child.getMinIntrinsicHeight(height));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> width;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">double</span> computeMaxIntrinsicHeight(<span class="built_in">double</span> height) &#123;</span><br><span class="line">    <span class="keyword">final</span> RenderBox? child = firstChild;</span><br><span class="line">    <span class="built_in">double</span> width = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">      width = math.max(width, child.getMaxIntrinsicHeight(height));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> width;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">bool</span> hitTestChildren(BoxHitTestResult result, &#123;<span class="keyword">required</span> Offset position&#125;) &#123;</span><br><span class="line">    <span class="keyword">final</span> RenderBox? child = firstChild;</span><br><span class="line">    <span class="keyword">if</span> (child != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">final</span> _DropdownMenuBodyParentData childParentData =</span><br><span class="line">          child.parentData! <span class="keyword">as</span> _DropdownMenuBodyParentData;</span><br><span class="line">      <span class="keyword">final</span> <span class="built_in">bool</span> isHit = result.addWithPaintOffset(</span><br><span class="line">        offset: childParentData.offset,</span><br><span class="line">        position: position,</span><br><span class="line">        hitTest: (BoxHitTestResult result, Offset transformed) &#123;</span><br><span class="line">          <span class="keyword">assert</span>(transformed == position - childParentData.offset);</span><br><span class="line">          <span class="keyword">return</span> child.hitTest(result, position: transformed);</span><br><span class="line">        &#125;,</span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">if</span> (isHit) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hand coded defaults. These will be updated once we have tokens/spec.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_DropdownMenuDefaultsM3</span> <span class="keyword">extends</span> <span class="title">DropdownMenuThemeData</span> </span>&#123;</span><br><span class="line">  _DropdownMenuDefaultsM3(<span class="keyword">this</span>.context);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> BuildContext context;</span><br><span class="line">  <span class="keyword">late</span> <span class="keyword">final</span> ThemeData _theme = Theme.of(context);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  TextStyle? <span class="keyword">get</span> textStyle =&gt; _theme.textTheme.labelLarge;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  MenuStyle <span class="keyword">get</span> menuStyle &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">const</span> MenuStyle(</span><br><span class="line">      minimumSize: MaterialStatePropertyAll&lt;Size&gt;(Size(_kMinimumWidth, <span class="number">0.0</span>)),</span><br><span class="line">      maximumSize: MaterialStatePropertyAll&lt;Size&gt;(Size.infinite),</span><br><span class="line">      visualDensity: VisualDensity.standard,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  InputDecorationTheme <span class="keyword">get</span> inputDecorationTheme &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">const</span> InputDecorationTheme(border: OutlineInputBorder());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基于DropdownMenu实现&quot;&gt;&lt;a href=&quot;#基于DropdownMenu实现&quot; class=&quot;headerlink&quot; title=&quot;基于DropdownMenu实现&quot;&gt;&lt;/a&gt;基于&lt;code&gt;DropdownMenu&lt;/code&gt;实现&lt;/h2&gt;&lt;p&gt;F</summary>
      
    
    
    
    <category term="移动端" scheme="http://princesaoke.github.io/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
    
    <category term="Flutter" scheme="http://princesaoke.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter组件记录</title>
    <link href="http://princesaoke.github.io/2024/03/13/Flutter%E7%BB%84%E4%BB%B6%E8%AE%B0%E5%BD%95/"/>
    <id>http://princesaoke.github.io/2024/03/13/Flutter%E7%BB%84%E4%BB%B6%E8%AE%B0%E5%BD%95/</id>
    <published>2024-03-13T15:22:12.000Z</published>
    <updated>2024-03-19T13:00:08.675Z</updated>
    
    <content type="html"><![CDATA[<p>参考文章较老旧，可能有部分组件被弃用</p><p>部分组件未经使用过，无法确认描述正确性，仅供参考</p><h2 id="信息展示"><a href="#信息展示" class="headerlink" title="信息展示"></a>信息展示</h2><h4 id="Tooltip"><a href="#Tooltip" class="headerlink" title="Tooltip"></a>Tooltip</h4><p>一个文本提示工具，帮助解释一个按钮或其他用户界面，当widget长时间按下时（当用户采取其他适当操作时）显示一个提示标签</p><h4 id="LinearProgressIndicator-CircularProgressIndicator"><a href="#LinearProgressIndicator-CircularProgressIndicator" class="headerlink" title="LinearProgressIndicator &amp; CircularProgressIndicator"></a>LinearProgressIndicator &amp; CircularProgressIndicator</h4><p>线性进度条和环形进度条</p><h4 id="RichText"><a href="#RichText" class="headerlink" title="RichText"></a>RichText</h4><p>富文本Text，可以显示多种样式的text</p><h4 id="Stepper"><a href="#Stepper" class="headerlink" title="Stepper"></a>Stepper</h4><p>一个Material Design 步骤指示器，显示一系列步骤的过程</p><h2 id="iOS风格"><a href="#iOS风格" class="headerlink" title="iOS风格"></a>iOS风格</h2><h4 id="CupertinoActivityIndicator"><a href="#CupertinoActivityIndicator" class="headerlink" title="CupertinoActivityIndicator"></a>CupertinoActivityIndicator</h4><p>iOS风格的加载条，一个圆形的转圈菊花</p><h4 id="CupertinoAlertDialog"><a href="#CupertinoAlertDialog" class="headerlink" title="CupertinoAlertDialog"></a>CupertinoAlertDialog</h4><h4 id="CupertinoButton"><a href="#CupertinoButton" class="headerlink" title="CupertinoButton"></a>CupertinoButton</h4><h4 id="CupertinoDialog"><a href="#CupertinoDialog" class="headerlink" title="CupertinoDialog"></a>CupertinoDialog</h4><h4 id="CupertinoDialogAction"><a href="#CupertinoDialogAction" class="headerlink" title="CupertinoDialogAction"></a>CupertinoDialogAction</h4><p>通常用于CupertinoAlertDialog的按钮</p><h4 id="CupertinoSlider"><a href="#CupertinoSlider" class="headerlink" title="CupertinoSlider"></a>CupertinoSlider</h4><p>iOS风格的滑动条</p><h4 id="CupertinoSwitch"><a href="#CupertinoSwitch" class="headerlink" title="CupertinoSwitch"></a>CupertinoSwitch</h4><p>iOS风格的开关，美观且常用</p><h4 id="CupertinoPageTransition"><a href="#CupertinoPageTransition" class="headerlink" title="CupertinoPageTransition"></a>CupertinoPageTransition</h4><p>提供iOS风格的页面过度动画</p><h4 id="CupertinoNavigationBar"><a href="#CupertinoNavigationBar" class="headerlink" title="CupertinoNavigationBar"></a>CupertinoNavigationBar</h4><p>iOS风格的导航栏，通常和CupertinoPageScaffold一起使用</p><h4 id="CupertinoTabBar"><a href="#CupertinoTabBar" class="headerlink" title="CupertinoTabBar"></a>CupertinoTabBar</h4><p>iOS风格的底部选项卡，通常和CupertinoTabScaffold一起使用</p><h4 id="CupertinoPageScaffold"><a href="#CupertinoPageScaffold" class="headerlink" title="CupertinoPageScaffold"></a>CupertinoPageScaffold</h4><p>一个iOS风格的页面的基本布局结构，包含内容和导航栏</p><h4 id="CupertinoTabScaffold"><a href="#CupertinoTabScaffold" class="headerlink" title="CupertinoTabScaffold"></a>CupertinoTabScaffold</h4><p>标签式iOS应用程序的结构，将选项卡栏放在内容选项卡之上</p><h4 id="CupertinoTabView"><a href="#CupertinoTabView" class="headerlink" title="CupertinoTabView"></a>CupertinoTabView</h4><p>支持选项卡间并行导航项卡的根内容，通常与CupertinoTabScaffolde一起使用</p><h2 id="手势交互"><a href="#手势交互" class="headerlink" title="手势交互"></a>手势交互</h2><h4 id="LongPressDraggable"><a href="#LongPressDraggable" class="headerlink" title="LongPressDraggable"></a>LongPressDraggable</h4><p>其子widget在长按时可拖动</p><h4 id="DragTarget"><a href="#DragTarget" class="headerlink" title="DragTarget"></a>DragTarget</h4><p>一个拖动的目标widget，在完成拖动时它可以接收数据</p><h4 id="Dismissible"><a href="#Dismissible" class="headerlink" title="Dismissible"></a>Dismissible</h4><p>可以在拖动时隐藏的widget</p><h4 id="IgnorePointer"><a href="#IgnorePointer" class="headerlink" title="IgnorePointer"></a>IgnorePointer</h4><p>手势将会穿透被其包裹的组件，如将其包裹在弹窗外，则可以穿过弹窗点击到下一层</p><h4 id="AbsorbPointer"><a href="#AbsorbPointer" class="headerlink" title="AbsorbPointer"></a>AbsorbPointer</h4><p>可对children统一设置是否接收手势</p><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><h4 id="AspectRatio"><a href="#AspectRatio" class="headerlink" title="AspectRatio"></a>AspectRatio</h4><p>指定子组件的宽高比</p><h4 id="ConstrainedBox"><a href="#ConstrainedBox" class="headerlink" title="ConstrainedBox"></a>ConstrainedBox</h4><p>对其子项施加附加约束，如：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> ConstrainedBox(</span><br><span class="line">    minWidth: <span class="number">100</span>,</span><br><span class="line">    child: Container(width: <span class="number">50</span>),    <span class="comment">// 宽度小于最大宽度则不生效，宽度仍为100</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="Baseline"><a href="#Baseline" class="headerlink" title="Baseline"></a>Baseline</h4><p>根据子项的基线对它们的位置进行定位</p><h4 id="Visibility"><a href="#Visibility" class="headerlink" title="Visibility"></a>Visibility</h4><p>根据传入的布尔值决定是否显示子组件</p><h4 id="FutureBuilder"><a href="#FutureBuilder" class="headerlink" title="FutureBuilder"></a>FutureBuilder</h4><p>基于与Future交互的最新快照来构建子组件</p><h4 id="StreamBuilder"><a href="#StreamBuilder" class="headerlink" title="StreamBuilder"></a>StreamBuilder</h4><p>基于与流交互的最新快照构建自身的子组件</p><h2 id="绘制和裁剪"><a href="#绘制和裁剪" class="headerlink" title="绘制和裁剪"></a>绘制和裁剪</h2><h4 id="ClipOval"><a href="#ClipOval" class="headerlink" title="ClipOval"></a>ClipOval</h4><p>将子组件裁剪为椭圆</p><h4 id="ClipRect"><a href="#ClipRect" class="headerlink" title="ClipRect"></a>ClipRect</h4><p>将子组件裁剪为矩形</p><h4 id="ClipPath"><a href="#ClipPath" class="headerlink" title="ClipPath"></a>ClipPath</h4><p>用path绘制形状裁剪其子组件</p><h4 id="CustomPaint"><a href="#CustomPaint" class="headerlink" title="CustomPaint"></a>CustomPaint</h4><p>提供一个画布，可在画布上绘制自定义图形</p><h2 id="滚动布局"><a href="#滚动布局" class="headerlink" title="滚动布局"></a>滚动布局</h2><h4 id="SingleChildScrollView"><a href="#SingleChildScrollView" class="headerlink" title="SingleChildScrollView"></a>SingleChildScrollView</h4><p>子组件超过父容器时可以滚动</p><h4 id="Scrollbar"><a href="#Scrollbar" class="headerlink" title="Scrollbar"></a>Scrollbar</h4><p>一个 Material Design 滚动条，表示当前滚动到了什么位置</p><h4 id="RefreshIndicator"><a href="#RefreshIndicator" class="headerlink" title="RefreshIndicator"></a>RefreshIndicator</h4><p>下拉刷新组件</p><h4 id="Scrollable"><a href="#Scrollable" class="headerlink" title="Scrollable"></a>Scrollable</h4><p>实现了可滚动widget的交互模型，但不包含UI显示相关的逻辑</p><h4 id="NestedScrollView"><a href="#NestedScrollView" class="headerlink" title="NestedScrollView"></a>NestedScrollView</h4><p>可嵌套其它滚动布局</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考文章较老旧，可能有部分组件被弃用&lt;/p&gt;
&lt;p&gt;部分组件未经使用过，无法确认描述正确性，仅供参考&lt;/p&gt;
&lt;h2 id=&quot;信息展示&quot;&gt;&lt;a href=&quot;#信息展示&quot; class=&quot;headerlink&quot; title=&quot;信息展示&quot;&gt;&lt;/a&gt;信息展示&lt;/h2&gt;&lt;h4 id=</summary>
      
    
    
    
    <category term="移动端" scheme="http://princesaoke.github.io/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
    
    <category term="Flutter" scheme="http://princesaoke.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript笔记</title>
    <link href="http://princesaoke.github.io/2024/03/13/JavaScript%E7%AC%94%E8%AE%B0/"/>
    <id>http://princesaoke.github.io/2024/03/13/JavaScript%E7%AC%94%E8%AE%B0/</id>
    <published>2024-03-12T16:39:38.000Z</published>
    <updated>2024-03-12T16:50:12.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="const、let、var的区别"><a href="#const、let、var的区别" class="headerlink" title="const、let、var的区别"></a>const、let、var的区别</h2><p><code>const</code>是常量，定义时必须赋初值，值不可修改。只限制变量绑定的值，不会限制引用数据类型内部的变动。如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="number">1</span></span><br><span class="line">a = <span class="number">2</span>   <span class="comment">// 报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> b = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">b.<span class="property">name</span> = <span class="string">&#x27;李四&#x27;</span>     <span class="comment">// 不会报错</span></span><br><span class="line">b = <span class="number">1</span>   <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><p><code>let</code>声明的是变量。</p><p><code>const</code>和<code>let</code>只在块内有效，即两个花括号之间，相当于局部的值。</p><p><code>var</code>定义的变量是全局的，但一个函数内<code>var</code>的变量不能在函数外访问。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;我是a&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)  <span class="comment">// 输出&#x27;我是a&#x27;</span></span><br><span class="line">    <span class="keyword">var</span> b = <span class="string">&#x27;我是b&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b)  <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><p>用<code>var</code>定义两个同名变量，后定义的会覆盖掉先定义的。<code>const</code>和<code>let</code>不允许重复定义。</p><p><code>var</code>存在变量提升的特性。当用<code>var</code>定义了一个变量，即便还未执行到，该变量也已经存在了，且值为<code>undefined</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)  <span class="comment">// 输出为10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>造成这种现象的原因是，<code>if</code>中用<code>var</code>定义了<code>a</code>，因变量提升（hoisting）特性，在执行前<code>a</code>被提升到函数作用域顶部，且初始值为<code>undefined</code>，于是<code>if</code>成立，早已存在的<code>a</code>由<code>undefined</code>被赋值为<code>10</code>。</p><p>将<code>var</code>改用<code>let</code>就不会有这样的问题。</p><p><strong>总结：无特殊情况不要用<code>var</code>，声明变量用<code>let</code>。声明对象类型用<code>const</code>，非对象类型用<code>let</code>。</strong></p><h2 id="innerHTML-和-innerText-的区别"><a href="#innerHTML-和-innerText-的区别" class="headerlink" title="innerHTML 和 innerText 的区别"></a>innerHTML 和 innerText 的区别</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>innerHTML与innerText的区别<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>hello world <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> div1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;div1&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(div1.<span class="property">innerHTML</span>);    <span class="comment">// &lt;p id=&quot;p1&quot;&gt;hello world &lt;/p&gt;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(div1.<span class="property">innerText</span>)    <span class="comment">// hello world</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p><a href="https://zhuanlan.zhihu.com/p/624027494">各种正则表达式样例</a></p><p><a href="https://blog.csdn.net/qq_42581563/article/details/129280355">一些常用的正则校验</a></p><h4 id="正则表达式剔除HTML标签与markdown语法符号生成文章简介"><a href="#正则表达式剔除HTML标签与markdown语法符号生成文章简介" class="headerlink" title="正则表达式剔除HTML标签与markdown语法符号生成文章简介"></a>正则表达式剔除HTML标签与markdown语法符号生成文章简介</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 剔除文章中的markdown语法符号，剔除所有html标签</span></span><br><span class="line"><span class="keyword">const</span> removeHTML = (<span class="attr">htmlStr</span>: string): <span class="function"><span class="params">string</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 定义script的正则表达式，去除js可以防止注入</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">scriptRegex</span>: <span class="title class_">RegExp</span> = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;&lt;script[^&gt;]*?&gt;[\\s\\S]*?&lt;\\/script&gt;&#x27;</span>, <span class="string">&#x27;gm&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义style的正则表达式，去除style样式，防止css代码过多时只截取到css样式代码</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">styleRegex</span>: <span class="title class_">RegExp</span> = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;&lt;style[^&gt;]*?&gt;[\\s\\S]*?&lt;\\/style&gt;&#x27;</span>, <span class="string">&#x27;gm&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义HTML标签的正则表达式，去除标签，只提取文字内容</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">htmlRegex</span>: <span class="title class_">RegExp</span> = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;&lt;[^&gt;]+&gt;&#x27;</span>, <span class="string">&#x27;gm&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义空格,回车,换行符,制表符</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">spaceRegex</span>: <span class="title class_">RegExp</span> = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;\\s*|\t|\r|\n&#x27;</span>, <span class="string">&#x27;gm&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 过滤script标签</span></span><br><span class="line">  htmlStr = htmlStr.<span class="title function_">replace</span>(scriptRegex, <span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="comment">// 过滤style标签</span></span><br><span class="line">  htmlStr = htmlStr.<span class="title function_">replace</span>(styleRegex, <span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="comment">// 过滤html标签</span></span><br><span class="line">  htmlStr = htmlStr.<span class="title function_">replace</span>(htmlRegex, <span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="comment">// 过滤空格等</span></span><br><span class="line">  htmlStr = htmlStr.<span class="title function_">replace</span>(spaceRegex, <span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> htmlStr.<span class="title function_">trim</span>().<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">100</span>); <span class="comment">// 返回文本字符串，最大长度100</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>剔除<code>&lt;script&gt;</code>标签可以防止XSS攻击</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;const、let、var的区别&quot;&gt;&lt;a href=&quot;#const、let、var的区别&quot; class=&quot;headerlink&quot; title=&quot;const、let、var的区别&quot;&gt;&lt;/a&gt;const、let、var的区别&lt;/h2&gt;&lt;p&gt;&lt;code&gt;const&lt;/c</summary>
      
    
    
    
    <category term="前端" scheme="http://princesaoke.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JavaScript" scheme="http://princesaoke.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>HTML笔记</title>
    <link href="http://princesaoke.github.io/2024/03/13/HTML%E7%AC%94%E8%AE%B0/"/>
    <id>http://princesaoke.github.io/2024/03/13/HTML%E7%AC%94%E8%AE%B0/</id>
    <published>2024-03-12T16:35:07.000Z</published>
    <updated>2024-03-12T16:50:54.079Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用阿里巴巴图标库的图标"><a href="#使用阿里巴巴图标库的图标" class="headerlink" title="使用阿里巴巴图标库的图标"></a>使用阿里巴巴图标库的图标</h2><p>这里只介绍通过在线链接的方法。</p><p>进入<a href="https://www.iconfont.cn/">阿里巴巴图标库</a>，选好需要的图标，放入购物车后将其加入项目。</p><p>进入资源管理-&gt;我的项目，切换到<code>Font class</code>，点击查看在线链接。</p><p><img src="/images/HTML%E7%AC%94%E8%AE%B0/link.png" alt="在线链接"></p><p>生成一个css链接，如<code>//at.alicdn.com/t/c/font_4287312_tew9cz81kg.css</code>，需要在前面加上<code>http:</code>，然后在HTML中引入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入阿里巴巴图标库的项目 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://at.alicdn.com/t/c/font_4287312_tew9cz81kg.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用<code>&lt;i&gt;</code>元素使用图表，需要添加两个class：<code>iconfont</code>和对应的图标代码，如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 假设图标代码为`icon-qq` --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-qq&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中图标代码可以在阿里巴巴图标库中复制</p><p><img src="/images/HTML%E7%AC%94%E8%AE%B0/icon_code.png" alt="图标代码"></p><p><em>附上<a href="https://blog.csdn.net/qq_63141957/article/details/130641116">参考文章</a>，其中有说明其他的引入图标方式</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用阿里巴巴图标库的图标&quot;&gt;&lt;a href=&quot;#使用阿里巴巴图标库的图标&quot; class=&quot;headerlink&quot; title=&quot;使用阿里巴巴图标库的图标&quot;&gt;&lt;/a&gt;使用阿里巴巴图标库的图标&lt;/h2&gt;&lt;p&gt;这里只介绍通过在线链接的方法。&lt;/p&gt;
&lt;p&gt;进入&lt;a hr</summary>
      
    
    
    
    <category term="前端" scheme="http://princesaoke.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="http://princesaoke.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Web安全漏洞</title>
    <link href="http://princesaoke.github.io/2024/01/10/Web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/"/>
    <id>http://princesaoke.github.io/2024/01/10/Web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-01-09T16:23:39.000Z</published>
    <updated>2024-05-15T07:57:49.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p><a href="https://zhuanlan.zhihu.com/p/22521378">CSRF是什么</a></p><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p><a href="https://zhuanlan.zhihu.com/p/26177815">浅谈XSS攻击的那些事（附常用绕过姿势）</a></p><h4 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h4><h4 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;CSRF&quot;&gt;&lt;a href=&quot;#CSRF&quot; class=&quot;headerlink&quot; title=&quot;CSRF&quot;&gt;&lt;/a&gt;CSRF&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22521378&quot;&gt;CSRF是什么&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CSS笔记</title>
    <link href="http://princesaoke.github.io/2023/12/26/CSS%E7%AC%94%E8%AE%B0/"/>
    <id>http://princesaoke.github.io/2023/12/26/CSS%E7%AC%94%E8%AE%B0/</id>
    <published>2023-12-25T16:37:29.000Z</published>
    <updated>2023-12-25T16:57:53.588Z</updated>
    
    <content type="html"><![CDATA[<h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p><img src="/images/CSS%E7%AC%94%E8%AE%B0/box_model.png" alt="盒子模型"></p><p>元素的总宽度为：<code>margin-left</code>+<code>border</code>+<code>padding-left</code>+<code>width</code>+<code>padding-right</code>+<code>border</code>+<code>margin-right</code></p><p>所以如果元素有margin、border、padding，实际大小会比CSS中写的width和height更大。</p><p><code>box-sizing</code>属性可以令width和height直接包含padding和border。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;盒子模型&quot;&gt;&lt;a href=&quot;#盒子模型&quot; class=&quot;headerlink&quot; title=&quot;盒子模型&quot;&gt;&lt;/a&gt;盒子模型&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/CSS%E7%AC%94%E8%AE%B0/box_model.png&quot; alt=&quot;盒子</summary>
      
    
    
    
    <category term="前端" scheme="http://princesaoke.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="CSS" scheme="http://princesaoke.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>智元机器人客户端实习面经</title>
    <link href="http://princesaoke.github.io/2023/12/12/%E6%99%BA%E5%85%83%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/"/>
    <id>http://princesaoke.github.io/2023/12/12/%E6%99%BA%E5%85%83%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/</id>
    <published>2023-12-12T08:01:09.000Z</published>
    <updated>2024-05-08T07:54:31.239Z</updated>
    
    <content type="html"><![CDATA[<p>面试是一个月以前的事了，已经被录用，有些地方记不清了。总共面了两轮，都是飞书线上面试。每次面试最后都有反问环节，我都事先准备了要反问的问题。</p><h2 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h2><p>一面问的都是Flutter相关的技术问题，完全没有牵扯到其他方面，面试官是负责社招的，实习后也由他来带我。总共面了40分钟左右，问题如下，打钩的是我觉得算回答出来的：</p><ul><li><span style="color: green">✔</span> 自我介绍</li><li><span style="color: green">✔</span> 学习Flutter多久了？</li><li><span style="color: red">❌</span> 了解Dart中的dynamic和var吗？它们赋值后可以更改数据类型吗？</li><li><span style="color: green">✔</span> const和final的区别，late的用法？</li><li><span style="color: green">✔</span> Dart空安全相关，<code>?.</code>和<code>??</code></li><li><span style="color: red">❌</span> Dart如何实现单例？</li><li><span style="color: red">❌</span> 给一张UI图，说出大致的布局实现方式？</li><li><span style="color: green">✔</span> 要点击导航栏切换body，如何实现？</li><li><span style="color: red">❌</span> 快速点击导航栏切换页面，多个页面请求完成后在短时间内快速渲染，页面会出现闪烁，如何解决？</li><li><span style="color: red">❌</span> 更改页面的宽度，要icon不变，仅缩小文字的宽度，文字溢出设置成省略号的样式，如何实现？</li><li><span style="color: green">✔</span> Dart中的可选参数是什么，有什么用，如何设置其默认值？</li><li><span style="color: red">❌</span> 组件前加const起到什么作用？</li><li><span style="color: red">❌</span> 如何实现局部刷新？</li><li><span style="color: green">✔</span> 如何实现动画？如改变透明度、位移、旋转等</li><li><span style="color: green">✔</span> 如何用Flutter的Canvas绘制出折线、带填充的矩形？</li></ul><p>问到动画和Canvas是因为简历上有写。</p><p>Dart中的<code>var</code>和js类似，是可变的，当时没接触到这个概念。单例的实现见<a href="https://princesaoke.github.io/2023/11/08/Dart%E7%AC%94%E8%AE%B0/">Dart笔记</a>，页面闪烁用防双击处理，局部刷新用<code>ValueNotifier</code>。</p><p>一面个人感觉挺失败的，很多问题都没回答上来。比如给UI图实现布局，我有开发经验按理这不是难事，但面试官给的是PC端的页面，我之前做的都是移动端，导航栏在底部，PC端导航栏在左边，而且一些布局也略微不同，加上面试是直接口述而非敲代码可以修改，一时有点无从下手，气氛明显尴尬了起来。问到局部刷新，我记得似乎曾经在某个帖子有看到过SafeArea与之相关，就半蒙半猜地说了，面试结束后一百度，根本是牛头不对马嘴……面到后面自己都没自信了，只想快点结束。</p><p>当时面完就觉得没戏了，没想到过了两天居然收到了hr的电话，约了二面。</p><h2 id="二面"><a href="#二面" class="headerlink" title="二面"></a>二面</h2><p>二面的问题更有开放性，面试官好像是软件部门的主管，有开摄像头，在我回答不出来的时候会引导我思考，所以感觉会轻松一些，总共20多分钟。</p><ul><li><span style="color: green">✔</span> 自我介绍</li><li><span style="color: green">✔</span> 为什么想要来实习？</li><li><span style="color: green">✔</span> 为什么学习Flutter？</li><li><span style="color: red">❌</span> 为什么Flutter选用Dart作语言？Dart优势何在？</li><li><span style="color: green">✔</span> 问项目，哪些功能是调用第三方接口？项目是否获奖？开发中最大的困难是什么？</li><li><span style="color: red">❌</span> 结合信安专业，如何防止攻击者破解用户账号密码？</li><li><span style="color: green">✔</span> 除了移动端、Flutter，是否关注了其他技术相关的东西或行业发展？</li></ul><p>和一面相比明显感觉二面的问题更综合考量一个人的能力、行业理解和培养价值。</p><p>有点出乎我意料的是，面试官看到我是信安专业的，问了我安全方面的问题。先是问有什么提高账号安全性的方法，我回答数据库密码存储哈希值而非明文、做输入检查防止SQL注入等。又问如果有人尝试用暴力尝试的方法破解密码应该如何防御？我回答加验证码。又问现在AI很强大，可以完成验证，是否有别的方法？面试官提示如果绕过客户端直接给后端发包呢，我回答APP加混淆避免反编译，不要让攻击者知道接口URL。面试官说加混淆可以，但接口总是要暴露在外的，有没有别的办法？我回答后端判断短时间内是否有同一个IP地址多次尝试登录同一个账号，如果是说明有人在暴力破解，就拒绝请求。面试官说如果是在连校园网的环境下，很多设备的IP地址是一样的，可能造成“误伤”，并且后端如何知道设备的登录次数呢？又问如果是固定密码去试账号要如何防御？最后我没有回答出来，面试官说这可能要不止一次网络请求，应该是属于进阶一点的问题了。</p><p>最后反问环节我问面试官我有哪些地方表达得不好，面试官回答这不能说。他告诉我大概五个工作日内会有结果，这一等就是半个月，就在我以为凉凉了要准备投下一份简历的时候，又接到了hr的电话，被录用了。</p><p>现在回想起来，还是有很多可以改进的地方。</p><p>首先是自我介绍，我觉得可以准备得充分些，简历上有的就不用说太多了，可以突出个人优势，也好暗示面试官的关注重点。如果只是把简历上已有的信息说一遍意义不大。</p><p>其次是有些地方没get到面试官想问的点。比如二面问后端如何知道设备的登录次数，应该是想问服务器如何识别是同一台设备，需要用到cookie什么的，当时脑子没转过弯来没想到考察的是cookie。</p><p>复盘后发觉两次面试都答的不咋地，没想到还能被录用，或许技术栈符合也是很重要的原因之一吧，也是很感谢面试官能给我这个机会。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;面试是一个月以前的事了，已经被录用，有些地方记不清了。总共面了两轮，都是飞书线上面试。每次面试最后都有反问环节，我都事先准备了要反问的问题。&lt;/p&gt;
&lt;h2 id=&quot;一面&quot;&gt;&lt;a href=&quot;#一面&quot; class=&quot;headerlink&quot; title=&quot;一面&quot;&gt;&lt;/a&gt;一面</summary>
      
    
    
    
    <category term="面经" scheme="http://princesaoke.github.io/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue3笔记</title>
    <link href="http://princesaoke.github.io/2023/11/28/Vue3%E7%AC%94%E8%AE%B0/"/>
    <id>http://princesaoke.github.io/2023/11/28/Vue3%E7%AC%94%E8%AE%B0/</id>
    <published>2023-11-28T08:55:45.000Z</published>
    <updated>2024-03-12T16:02:58.228Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://cn.vuejs.org/guide/introduction.html">Vue3官方文档</a></p><p>参考文章：</p><p><a href="https://zhuanlan.zhihu.com/p/654327710">手把手教你使用Vite创建Vue3项目</a></p><p><a href="https://blog.csdn.net/weixin_42382758/article/details/131080818?spm=1001.2014.3001.5502">尚硅谷甄选</a></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>终端运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm create vue@latest</span><br></pre></td></tr></table></figure><h4 id="使用-Vite-创建项目"><a href="#使用-Vite-创建项目" class="headerlink" title="使用 Vite 创建项目"></a>使用 Vite 创建项目</h4><p><strong>注意：Vite 需要 Node.js 版本 18+，20+</strong></p><p>终端执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest</span><br></pre></td></tr></table></figure><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h4 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h4><p><code>&#123;&#123; button &#125;&#125;</code>中元素不会被解析，需要用<code>&lt;div v-html=&quot;button&quot;&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> button = <span class="title function_">ref</span>(<span class="string">&#x27;&lt;button&gt;Click Me&lt;/button&gt;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;button&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>相当于将<code>&lt;div&gt;</code>的innerHTML设为button中的元素</p><h4 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h4><p>使用指令<code>v-bind:属性名=&quot;&quot;</code>或其简写<code>:属性名=&quot;&quot;</code>为元素添加单个属性，或者使用<code>v-bind=&quot;&quot;</code>添加多个属性，具体如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> myId = <span class="title function_">ref</span>(<span class="string">&#x27;nav&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> myClass = <span class="title function_">ref</span>(<span class="string">&#x27;container&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> isButtonDisabled = <span class="title function_">ref</span>(<span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> myAttr = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">id</span>: <span class="string">&#x27;nav&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">class</span>: <span class="string">&#x27;container&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;myId&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;myClass&quot;</span>&gt;</span>bind<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">&quot;isButtonDisabled&quot;</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind</span>=<span class="string">&quot;myAttr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> stars = <span class="title function_">reactive</span>([</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">name</span>: <span class="string">&#x27;角木蛟&#x27;</span>, <span class="attr">part</span>: <span class="string">&#x27;东方苍龙&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">name</span>: <span class="string">&#x27;井木犴&#x27;</span>, <span class="attr">part</span>: <span class="string">&#x27;南方朱雀&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">name</span>: <span class="string">&#x27;奎木狼&#x27;</span>, <span class="attr">part</span>: <span class="string">&#x27;西方白虎&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">name</span>: <span class="string">&#x27;斗木獬&#x27;</span>, <span class="attr">part</span>: <span class="string">&#x27;北方玄武&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    ])</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">&quot;star in stars&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>星宿名：&#123;&#123; star.name &#125;&#125;，所属星象：&#123;&#123; star.part &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="v-if-和-v-show-的区别"><a href="#v-if-和-v-show-的区别" class="headerlink" title="v-if 和 v-show 的区别"></a>v-if 和 v-show 的区别</h4><p><code>v-show</code>不管初始条件是否为真，元素都会被渲染，只不过是根据条件修改元素的样式来判断是否显示。当<code>v-show=&quot;false&quot;</code>时，给元素加上<code>style=&quot;display: none;&quot;</code>，当<code>v-show=&quot;true&quot;</code>时，移除该样式。因此元素始终是存在的。</p><p><code>v-if=&quot;false&quot;</code>则是将元素直接删除，DOM元素不再存在。</p><p>由于<code>v-show</code>始终都会渲染元素，因此有更高的初始渲染消耗，而<code>v-if</code>若为假则初始时不需要渲染，则没有这部分的消耗。但切换时<code>v-show</code>只需要移除<code>display: none</code>，因此相比<code>v-if</code>的切换消耗会更低。</p><p>如果需要频繁切换则用<code>v-show</code>，如果在运行时很少改变则用<code>v-if</code>。</p><h2 id="响应式数据"><a href="#响应式数据" class="headerlink" title="响应式数据"></a>响应式数据</h2><h4 id="ref-和-reactive-的区别"><a href="#ref-和-reactive-的区别" class="headerlink" title="ref 和 reactive 的区别"></a>ref 和 reactive 的区别</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">import</span> &#123; ref, reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> user = <span class="title function_">reactive</span>(&#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;星日马&#x27;</span> &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>ref</code>可以用于基本数据类型和对象，但<code>reactive</code>只能用于对象</li><li>访问<code>ref</code>的值要<code>count.value</code>，而访问<code>reactive</code>的值直接<code>user</code>不需要加value</li><li><code>ref</code>适合基本数据类型，<code>reactive</code>适合对象</li><li>单独将<code>ref</code>对象中的变量赋值给新变量，新变量也支持响应式；但对<code>reactive</code>进行同样操作则新变量不具备响应式</li><li><code>ref</code>通过外层包裹一个对象来实现，<code>reactive</code>通过<code>proxy</code>实现</li></ul><h4 id="toRef"><a href="#toRef" class="headerlink" title="toRef"></a>toRef</h4><p>将普通变量和响应式对象的成员变量进行双向响应式绑定，不论是改变普通变量的值还是成员变量的值，数据都会更新，解决了reactive无法抽离出响应式变量的问题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">import</span> &#123; ref, reactive, toRef &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> flower = <span class="title function_">ref</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;梅花&#x27;</span>, <span class="attr">price</span>: <span class="number">48</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> user = <span class="title function_">reactive</span>(&#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;房日兔&#x27;</span> &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> flowerPrice = <span class="title function_">toRef</span>(flower.<span class="property">value</span>, <span class="string">&#x27;price&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> userId = <span class="title function_">toRef</span>(user, <span class="string">&#x27;id&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        flower.<span class="property">value</span>.<span class="property">price</span>++    <span class="comment">// 改变对象的成员变量的值，普通变量的值也会更新</span></span></span><br><span class="line"><span class="language-javascript">        userId.<span class="property">value</span>++          <span class="comment">// 改变普通变量的值，成员变量也会更新</span></span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>flowerPrice: &#123;&#123; flowerPrice &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>userId: &#123;&#123; userId &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="toRefs"><a href="#toRefs" class="headerlink" title="toRefs"></a>toRefs</h4><p>与<code>toRef</code>的区别尚不明确。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">import</span> &#123; ref, reactive, toRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> flower = <span class="title function_">ref</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;梅花&#x27;</span>, <span class="attr">price</span>: <span class="number">48</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> user = <span class="title function_">reactive</span>(&#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;房日兔&#x27;</span> &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> flowerPrice = <span class="title function_">toRefs</span>(flower.<span class="property">value</span>)[<span class="string">&#x27;price&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> userId = <span class="title function_">toRefs</span>(user).<span class="property">id</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        flower.<span class="property">value</span>.<span class="property">price</span>++</span></span><br><span class="line"><span class="language-javascript">        userId.<span class="property">value</span>++</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>flowerPrice: &#123;&#123; flowerPrice &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>user.id: &#123;&#123; user.id &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><p>可以使用<code>v-on</code>指令来监听DOM事件，也可缩写成<code>@</code>，用法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;触发了myFunction方法&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;myFunction&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;myFunction&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h4><p>在原生JS中，我们可以使用<code>even.preventDefault()</code>来阻止默认事件或使用<code>event.stopPropagation()</code>阻止事件冒泡，Vue提供了更优雅的实现方式，即事件修饰符：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;触发了myFunction方法&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">clickDiv</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点击了div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">clickP</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点击了p&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://PrinceSaoKe.github.io&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;myFunction&quot;</span>&gt;</span>点了不会跳转的超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;clickDiv&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click.stop</span>=<span class="string">&quot;clickP&quot;</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击了p</span><br></pre></td></tr></table></figure><p>若不加<code>.stop</code>，则输出为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">点击了p</span><br><span class="line">点击了div</span><br></pre></td></tr></table></figure><p>该写法等同于：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    event.<span class="title function_">preventDefault</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;触发了myFunction方法&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">clickDiv</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    event.<span class="title function_">stopPropagation</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点击了div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">clickP</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    event.<span class="title function_">stopPropagation</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点击了p&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://princesaoke.github.io&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;myFunction&quot;</span>&gt;</span>点了不会跳转的超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;clickDiv&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">&quot;clickP&quot;</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="public-文件夹和-src-assets-文件夹的区别"><a href="#public-文件夹和-src-assets-文件夹的区别" class="headerlink" title="&#x2F;public 文件夹和 &#x2F;src&#x2F;assets 文件夹的区别"></a>&#x2F;public 文件夹和 &#x2F;src&#x2F;assets 文件夹的区别</h2><ul><li>引用<code>/public</code>中的文件时不需要写public目录，直接<code>&lt;img src=&quot;/logo.png&quot;&gt;</code>，而引用<code>/src/assets</code>中的文件要写全路径<code>&lt;img src=&quot;@/assets/logo.png&quot;&gt;</code></li><li>打包时<code>/src/assets</code>下的文件会被打包工具处理，包括压缩、重命名等，而<code>/public</code>则不会，是直接复制到<code>dist</code>里</li><li>如果文件不需要被处理，如网站的结构用图（favicon.ico、logo图片等），放<code>public</code>；否则如内容图片或者需要被构建为base64的小图标放<code>assets</code></li></ul><h2 id="开发过程中的跨域问题"><a href="#开发过程中的跨域问题" class="headerlink" title="开发过程中的跨域问题"></a>开发过程中的跨域问题</h2><p>浏览器和后端服务器之间存在跨域问题，但服务器和服务器之间可以随意访问，因此要在本地配置一个代理服务器来做中转，浏览器将请求发到本地代理服务器，代理服务器再发到后端服务器，就不会跨域报错了。</p><p>先将axios的baseURL设置为<code>&#39;/api&#39;</code>，然后修改<code>vite.config.ts</code>：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">port</span>: <span class="number">5173</span>,</span><br><span class="line">    <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://saoke.fun:8080&#x27;</span>,                <span class="comment">// 代理地址，这里设置的地址会代替axios中设置的baseURL</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,                             <span class="comment">// 如果接口跨域，需要进行这个参数配置</span></span><br><span class="line">        <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="attr">secure</span>: <span class="literal">false</span>,                                  <span class="comment">// 如果是https接口需要进行此配置</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>参考文章：<a href="https://blog.csdn.net/c327127960/article/details/123195356">一篇看懂vue如何做调试后台接口的配置和proxy的工作原理以及为什么能解决跨域</a></p><h2 id="简单请求与复杂请求"><a href="#简单请求与复杂请求" class="headerlink" title="简单请求与复杂请求"></a>简单请求与复杂请求</h2><p>满足以下条件的才是简单请求：</p><ul><li>请求方式为<code>GET</code>、<code>POST</code>、<code>HEAD</code></li><li>不能手动设置除<code>Accept</code>、<code>Accept-Language</code>、<code>Content-Language</code>、<code>Last-Event-ID</code>、<code>Content-Type</code>之外的请求头</li><li><code>Content-Type</code>的值只限于<code>application/x-www-form-urlencoded</code>、<code>multipart/form-data</code>、<code>text/plain</code></li><li>不能为<code>XMLHttpRequestUpdate</code>注册监听器</li><li>请求中没有使用<code>readableStream</code>对象</li></ul><p>非简单请求就是复杂请求。</p><p>复杂请求会多发一次<code>OPTIONS</code>预请求，服务器返回预响应，成功后才会发送真实请求。预请求存在跨域问题。</p><p>参考文章：</p><p><a href="https://blog.csdn.net/qq_61233877/article/details/124716768">简单请求和复杂请求的区别</a></p><p><a href="https://zhuanlan.zhihu.com/p/101074873">ajax请求：简单请求&amp;复杂请求</a></p><h2 id="项目构建"><a href="#项目构建" class="headerlink" title="项目构建"></a>项目构建</h2><p>要将打包好的文件按css、js进行分类，在<code>vite.config.ts</code>进行以下配置：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">build</span>: &#123;</span><br><span class="line">    <span class="attr">rollupOptions</span>: &#123;</span><br><span class="line">      <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">chunkFileNames</span>: <span class="string">&#x27;static/js/[name]-[hash].js&#x27;</span>,</span><br><span class="line">        <span class="attr">entryFileNames</span>: <span class="string">&#x27;static/js/[name]-[hash].js&#x27;</span>,</span><br><span class="line">        <span class="attr">assetFileNames</span>: <span class="string">&#x27;static/[ext]/[name]-[hash][extname]&#x27;</span>,</span><br><span class="line">        <span class="comment">//manualChunks 两种使用形式</span></span><br><span class="line">        <span class="comment">// manualChunks:&#123;</span></span><br><span class="line">        <span class="comment">//   elementPlus:[&#x27;element-plus&#x27;]</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="title function_">manualChunks</span>(<span class="params">id</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (id.<span class="title function_">includes</span>(<span class="string">&#x27;element-plus&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;element-plus&#x27;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>参考文章：</p><p><a href="https://juejin.cn/post/7176149108611416123">vue3打包后没有默认进行分包？立马解决⚡</a></p><h2 id="Vite"><a href="#Vite" class="headerlink" title="Vite"></a>Vite</h2><p><a href="https://cn.vitejs.dev/guide/">Vite官方文档</a></p><h2 id="Vue-Router"><a href="#Vue-Router" class="headerlink" title="Vue Router"></a>Vue Router</h2><p><a href="https://router.vuejs.org/zh/guide/">Vue Router 官方文档</a></p><p><a href="https://blog.csdn.net/w137160164/article/details/131152766">参考文章</a></p><h2 id="Element-Plus"><a href="#Element-Plus" class="headerlink" title="Element Plus"></a>Element Plus</h2><p><a href="https://element-plus.gitee.io/zh-CN/component/overview.html">Element Plus 官方文档</a></p><h2 id="Pinia"><a href="#Pinia" class="headerlink" title="Pinia"></a>Pinia</h2><p><a href="https://pinia.web3doc.top/introduction.html">Pinia官方文档</a></p><p><a href="https://www.jianshu.com/p/80e5a12f43dc">参考文章</a></p><h2 id="可能用到的工具"><a href="#可能用到的工具" class="headerlink" title="可能用到的工具"></a>可能用到的工具</h2><table><thead><tr><th align="center">名称</th><th align="center">下载方式</th><th align="center">官方文档</th><th>描述</th></tr></thead><tbody><tr><td align="center">NVM</td><td align="center"><a href="https://github.com/coreybutler/nvm-windows/releases">NVM下载地址</a></td><td align="center"></td><td>一个nodejs的版本管理工具，通过它可以安装和切换不同版本的nodejs</td></tr><tr><td align="center">NRM</td><td align="center">npm install -g nrm</td><td align="center"></td><td>npm的镜像管理工具，可以在npm镜像源间快速切换</td></tr><tr><td align="center">v-md-editor</td><td align="center">npm i @kangc&#x2F;v-md-editor -S</td><td align="center"><a href="http://ckang1229.gitee.io/vue-markdown-editor/zh/">v-md-editor官方文档</a></td><td>markdown编辑器</td></tr><tr><td align="center">highlight.js</td><td align="center">npm install highlight.js</td><td align="center"><a href="https://highlightjs.org/">highlight.js 官方文档</a></td><td>为markdown代码块添加高亮</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://cn.vuejs.org/guide/introduction.html&quot;&gt;Vue3官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/654327710&quot;&gt;</summary>
      
    
    
    
    <category term="前端" scheme="http://princesaoke.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue3" scheme="http://princesaoke.github.io/tags/Vue3/"/>
    
  </entry>
  
  <entry>
    <title>MySQL笔记</title>
    <link href="http://princesaoke.github.io/2023/11/22/MySQL%E7%AC%94%E8%AE%B0/"/>
    <id>http://princesaoke.github.io/2023/11/22/MySQL%E7%AC%94%E8%AE%B0/</id>
    <published>2023-11-22T08:03:48.000Z</published>
    <updated>2023-11-23T12:25:55.475Z</updated>
    
    <content type="html"><![CDATA[<p><em><a href="https://blog.csdn.net/select_myname/article/details/126314725">很全的MySQL常用指令</a></em></p><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>在<a href="https://downloads.mysql.com/archives/community/">官方下载地址</a>下载压缩包。</p><p><img src="/images/MySQL%E7%AC%94%E8%AE%B0/mysql_download.png" alt="mysql_download"></p><p>解压到要保存的路径，在 环境变量 -&gt; 系统变量 -&gt; Path 里面添加一行，指向MySQL的bin目录，如<code>D:\mysql-8.0.33-winx64\bin</code>。</p><p>在MySQL的bin文件夹里新建文件<code>my.ini</code>，文件内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"># 设置mysql的安装目录(能看到bin即可)</span><br><span class="line">basedir=D:\mysql-8.0.33-winx64\</span><br><span class="line"># 设置mysql的数据存放目录</span><br><span class="line">datadir=D:\mysql-8.0.33-winx64\data\</span><br><span class="line"># mysql端口</span><br><span class="line">port=3306</span><br><span class="line"># 跳过授权</span><br><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure><p>记得把其中的路径换成你自己的安装路径。</p><p>然后以管理员身份打开cmd，进入MySQL的bin目录，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 mysql 服务</span></span><br><span class="line">mysqld –install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 data 文件夹 （你可以初始化多次，但是每次必须清空data文件夹）</span></span><br><span class="line">mysqld --initialize-insecure --user=mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 mysql 服务</span></span><br><span class="line">net start mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录 mysql(让你输密码，直接回车即可)</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 root 账户密码</span></span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED WITH <span class="string">&#x27;mysql_native_password&#x27;</span> BY <span class="string">&#x27;新密码&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新权限，使之生效</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>然后将my.ini里跳过授权给注释掉<code># skip-grant-tables</code></p><p>输入<code>\q</code>退出登录MySQL，然后重启MySQL用新设置的密码登录即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br><span class="line">net start mysql</span><br><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p><code>mysql -uroot -p</code>这句意思是用户名为<code>root</code>，也可以在<code>-p</code>后直接跟密码，这样密码是可见的。</p><h3 id="Windows-Server-2022-上遇到的问题"><a href="#Windows-Server-2022-上遇到的问题" class="headerlink" title="Windows Server 2022 上遇到的问题"></a>Windows Server 2022 上遇到的问题</h3><h5 id="安装MySQL和初始化data文件夹时报错：找不到MSVCP140-dll文件"><a href="#安装MySQL和初始化data文件夹时报错：找不到MSVCP140-dll文件" class="headerlink" title="安装MySQL和初始化data文件夹时报错：找不到MSVCP140.dll文件"></a>安装MySQL和初始化data文件夹时报错：找不到<code>MSVCP140.dll</code>文件</h5><p>解决方法：安装 Microsoft Visual C++ Redistributable 客户端库，<a href="https://www.microsoft.com/en-us/download/details.aspx?id=48145">点击前往下载</a>。</p><h5 id="输入net-start-mysql时报错：服务没有响应控制功能"><a href="#输入net-start-mysql时报错：服务没有响应控制功能" class="headerlink" title="输入net start mysql时报错：服务没有响应控制功能"></a>输入<code>net start mysql</code>时报错：服务没有响应控制功能</h5><p>解决方法：下载<a href="https://cn.dll-files.com/vcruntime140_1.dll.html">VCRUNTIME140_1.dll</a>，解压后拷贝到MySQL的bin文件夹下。</p><h2 id="远程连接数据库"><a href="#远程连接数据库" class="headerlink" title="远程连接数据库"></a>远程连接数据库</h2><h4 id="开放MySQL端口"><a href="#开放MySQL端口" class="headerlink" title="开放MySQL端口"></a>开放MySQL端口</h4><p>首先要确保服务器的MySQL端口是放行的，在my.ini中我们设置了3306端口。</p><p>以阿里云服务器为例，在安全组中手动添加访问规则，目的端口3306，源0.0.0.0。</p><p>若端口没有放行，则会有以下报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 2003 (HY000): Can<span class="string">&#x27;t connect to MySQL server on &#x27;</span>XXX.XXX.XXX.XXX:3306<span class="string">&#x27; (10060)</span></span><br></pre></td></tr></table></figure><h4 id="设置远程登录权限"><a href="#设置远程登录权限" class="headerlink" title="设置远程登录权限"></a>设置远程登录权限</h4><p>在服务器上登录MySQL，然后输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set host=&#x27;%&#x27; where user=&#x27;root&#x27;; // 开放远程登录权限</span><br><span class="line">flush privileges;   // 刷新权限</span><br></pre></td></tr></table></figure><p>若没开启权限，则报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1130 (HY000): Host <span class="string">&#x27;XXX.XXX.XXX.XXX&#x27;</span> is not allowed to connect to this MySQL server</span><br></pre></td></tr></table></figure><h4 id="远程登录MySQL"><a href="#远程登录MySQL" class="headerlink" title="远程登录MySQL"></a>远程登录MySQL</h4><p>在自己的电脑上打开cmd，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h主机地址 -u用户名 -p</span><br></pre></td></tr></table></figure><h2 id="MySQL数据的备份"><a href="#MySQL数据的备份" class="headerlink" title="MySQL数据的备份"></a>MySQL数据的备份</h2><p>终端进入MySQL安装目录下的bin目录，执行指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p 数据库名 &gt; 备份文件路径及文件名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如：</span></span><br><span class="line">mysqldump -uroot -p flower_shop &gt; flower_shop_backup.sql</span><br></pre></td></tr></table></figure><h2 id="MySQL备份数据的还原"><a href="#MySQL备份数据的还原" class="headerlink" title="MySQL备份数据的还原"></a>MySQL备份数据的还原</h2><p>登录MySQL后执行以下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database 数据库名称;  // 创建一个新的数据库用于承载迁移来的数据</span><br><span class="line">use 数据库名称;              // 切换到该数据库</span><br><span class="line">source 文件路径;             // 导入备份数据</span><br></pre></td></tr></table></figure><h2 id="存储过程-Procedure"><a href="#存储过程-Procedure" class="headerlink" title="存储过程 &#x2F; Procedure"></a>存储过程 &#x2F; Procedure</h2><p>相当于编程语言中的方法，定义SQL语句模板，可以传参调用。</p><p>创建一个存储过程，用于查询某种花的价格，调用后删除：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line">create procedure getFlowerPrice(in name varchar(15))</span><br><span class="line">begin</span><br><span class="line">    select price from flower where flower.name=name;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line">call getFlowerPrice(&#x27;红玫瑰&#x27;);</span><br><span class="line"></span><br><span class="line">drop procedure getFlowerPrice;  # 删除存储过程</span><br></pre></td></tr></table></figure><p>其中<code>delimiter</code>作用是修改SQL语句结束符，避免存储过程中的<code>;</code>和语句结束符混淆。</p><h2 id="触发器-Trigger"><a href="#触发器-Trigger" class="headerlink" title="触发器 &#x2F; Trigger"></a>触发器 &#x2F; Trigger</h2><p>在数据插入、修改、删除时自动执行某些操作，可用于数据库日志记录等。</p><p>创建一个触发器，当录入一种花但未给出花语时，将花语设为“暂无”：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line">create trigger my_trigger before insert on flower for each row</span><br><span class="line">begin</span><br><span class="line">    if new.flower_language is null then</span><br><span class="line">        set new.flower_language=&#x27;暂无&#x27;;</span><br><span class="line">    end if;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line">show triggers;  # 查看触发器</span><br><span class="line"></span><br><span class="line">drop trigger flower_shop.my_trigger;    # 删除触发器</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://blog.csdn.net/select_myname/article/details/126314725&quot;&gt;很全的MySQL常用指令&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装MySQL&quot;&gt;&lt;a href=&quot;#安装MySQL&quot;</summary>
      
    
    
    
    <category term="后端" scheme="http://princesaoke.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="MySQL" scheme="http://princesaoke.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Dart笔记</title>
    <link href="http://princesaoke.github.io/2023/11/08/Dart%E7%AC%94%E8%AE%B0/"/>
    <id>http://princesaoke.github.io/2023/11/08/Dart%E7%AC%94%E8%AE%B0/</id>
    <published>2023-11-08T08:34:56.000Z</published>
    <updated>2024-04-01T16:24:35.005Z</updated>
    
    <content type="html"><![CDATA[<h2 id="var-和-dynamic"><a href="#var-和-dynamic" class="headerlink" title="var 和 dynamic"></a>var 和 dynamic</h2><p><code>var</code>未赋初值时，默认值为<code>null</code>，赋值后数据类型可变。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> variable;</span><br><span class="line"><span class="built_in">print</span>(variable);    <span class="comment">// null</span></span><br><span class="line">variable = <span class="string">&#x27;我是字符串&#x27;</span></span><br><span class="line">variable = <span class="number">10.00</span></span><br></pre></td></tr></table></figure><p><code>dynamic</code>未赋初值时，默认值为<code>null</code>，赋值后数据类型可变，同<code>var</code>。</p><h2 id="List-map"><a href="#List-map" class="headerlink" title="List.map()"></a>List.map()</h2><p>常用情景：一个对象列表，要将列表中所有对象的某个属性提取出来进行某些操作，生成一个新的列表：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;UserModel&gt; userList = [UserModel(name: <span class="string">&#x27;张三&#x27;</span>, age: <span class="number">20</span>), UserModel(name: <span class="string">&#x27;李四&#x27;</span>, age: <span class="number">18</span>)];</span><br><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; nameList = userList.map((user) =&gt; user.name).toList();</span><br></pre></td></tr></table></figure><h2 id="Flutter为何采用Dart语言？Dart优势何在？"><a href="#Flutter为何采用Dart语言？Dart优势何在？" class="headerlink" title="Flutter为何采用Dart语言？Dart优势何在？"></a>Flutter为何采用Dart语言？Dart优势何在？</h2><h2 id="类型拓展方法"><a href="#类型拓展方法" class="headerlink" title="类型拓展方法"></a>类型拓展方法</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extension</span> DividerExtension <span class="keyword">on</span> <span class="built_in">int</span> &#123;</span><br><span class="line">  <span class="comment">/// <span class="language-markdown">垂直方向间距</span></span></span><br><span class="line">  SizedBox vGap =&gt; SizedBox(height: <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用例：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Column(children: [</span><br><span class="line">  <span class="keyword">const</span> Text(<span class="string">&#x27;太阴&#x27;</span>),</span><br><span class="line">  <span class="number">20.</span>vGap,</span><br><span class="line">  <span class="keyword">const</span> Text(<span class="string">&#x27;太阳&#x27;</span>),</span><br><span class="line">  <span class="number">20.</span>vGap,</span><br><span class="line">  <span class="keyword">const</span> Text(<span class="string">&#x27;少阴&#x27;</span>),</span><br><span class="line">  <span class="number">20.</span>vGap,</span><br><span class="line">  <span class="keyword">const</span> Text(<span class="string">&#x27;少阳&#x27;</span>),</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><h2 id="Dart中的工厂模式"><a href="#Dart中的工厂模式" class="headerlink" title="Dart中的工厂模式"></a>Dart中的工厂模式</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DebugButton</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> DebugButton(&#123;</span><br><span class="line">    <span class="keyword">super</span>.key,</span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">this</span>.text,</span><br><span class="line">    <span class="keyword">this</span>.onPressed,</span><br><span class="line">    <span class="keyword">this</span>.backgroundColor,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> text;</span><br><span class="line">  <span class="keyword">final</span> <span class="keyword">void</span> <span class="built_in">Function</span>()? onPressed;</span><br><span class="line">  <span class="keyword">final</span> Color? backgroundColor;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="language-markdown">Primary按钮</span></span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">factory</span> DebugButton.primary(&#123;</span><br><span class="line">    <span class="keyword">required</span> <span class="built_in">String</span> text,</span><br><span class="line">    Color? backgroundColor,</span><br><span class="line">    <span class="keyword">void</span> <span class="built_in">Function</span>()? onPressed,</span><br><span class="line">  &#125;) = _DebugPrimaryButton;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> OutlinedButton(</span><br><span class="line">      onPressed: () =&gt; onPressed?.call(),</span><br><span class="line">      style: OutlinedButton.styleFrom(</span><br><span class="line">        padding: <span class="keyword">const</span> EdgeInsets.symmetric(horizontal: <span class="number">50</span>, vertical: <span class="number">20</span>),</span><br><span class="line">        backgroundColor: backgroundColor,</span><br><span class="line">        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(<span class="number">30</span>)),</span><br><span class="line">      ),</span><br><span class="line">      child: Text(text),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_DebugPrimaryButton</span> <span class="keyword">extends</span> <span class="title">DebugButton</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> _DebugPrimaryButton(&#123;</span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">super</span>.text,</span><br><span class="line">    <span class="keyword">super</span>.backgroundColor,</span><br><span class="line">    <span class="keyword">super</span>.onPressed,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> ElevatedButton(</span><br><span class="line">      onPressed: () =&gt; onPressed?.call(),</span><br><span class="line">      style: ElevatedButton.styleFrom(</span><br><span class="line">        padding: <span class="keyword">const</span> EdgeInsets.symmetric(horizontal: <span class="number">50</span>, vertical: <span class="number">20</span>),</span><br><span class="line">        backgroundColor: backgroundColor,</span><br><span class="line">        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(<span class="number">30</span>)),</span><br><span class="line">      ),</span><br><span class="line">      child: Text(text),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;var-和-dynamic&quot;&gt;&lt;a href=&quot;#var-和-dynamic&quot; class=&quot;headerlink&quot; title=&quot;var 和 dynamic&quot;&gt;&lt;/a&gt;var 和 dynamic&lt;/h2&gt;&lt;p&gt;&lt;code&gt;var&lt;/code&gt;未赋初值时，默认值为</summary>
      
    
    
    
    <category term="移动端" scheme="http://princesaoke.github.io/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
    
    <category term="Flutter" scheme="http://princesaoke.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin笔记</title>
    <link href="http://princesaoke.github.io/2023/10/27/Kotlin%E7%AC%94%E8%AE%B0/"/>
    <id>http://princesaoke.github.io/2023/10/27/Kotlin%E7%AC%94%E8%AE%B0/</id>
    <published>2023-10-27T02:52:41.000Z</published>
    <updated>2024-04-29T09:16:32.910Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Kotlin-与-Java-的关系"><a href="#Kotlin-与-Java-的关系" class="headerlink" title="Kotlin 与 Java 的关系"></a>Kotlin 与 Java 的关系</h2><p><code>Java</code>运行过程：Java源代码 -&gt; 编译 -&gt; 生成class文件 -&gt; JVM解释执行</p><p>Java虚拟机并不关心class文件是如何生成的，因此也可以使用<code>Kotlin</code>生成class文件，JVM也可以解释执行。</p><p><code>Kotlin</code>可以无缝使用<code>Java</code>第三方的开源库。</p><h2 id="val-与-var"><a href="#val-与-var" class="headerlink" title="val 与 var"></a>val 与 var</h2><p>类比<code>JavaScript</code>中的<code>const</code>和<code>let</code>。</p><p><code>val</code>用于声明常量，相当于加了<code>final</code>，赋值后无法修改；<code>var</code>用于声明变量。</p><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><p><code>Kotlin</code>中的<code>if</code>是带有返回值的。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> max = <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">    a</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串模板"><a href="#字符串模板" class="headerlink" title="字符串模板"></a>字符串模板</h2><p><code>$</code>后花括号内可以是一个表达式：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> str = <span class="string">&quot;你好&quot;</span></span><br><span class="line">println(<span class="string">&quot;<span class="variable">$str</span>，<span class="subst">$&#123;str.replace(<span class="string">&quot;你好&quot;</span>, <span class="string">&quot;再见&quot;</span>)&#125;</span>！&quot;</span>)   <span class="comment">// 你好，再见！</span></span><br></pre></td></tr></table></figure><h2 id="when"><a href="#when" class="headerlink" title="when"></a>when</h2><p>相当于<code>switch</code>，不过用起来更方便。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getScore</span><span class="params">(name: <span class="type">String</span>)</span></span> = <span class="keyword">when</span> (name) &#123;</span><br><span class="line">    <span class="string">&quot;张三&quot;</span> -&gt; <span class="number">85</span></span><br><span class="line">    <span class="string">&quot;李四&quot;</span> -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">91</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> -&gt; <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区间"><a href="#区间" class="headerlink" title="区间"></a>区间</h2><h4 id="闭区间"><a href="#闭区间" class="headerlink" title="闭区间"></a>闭区间</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> range = <span class="number">0.</span><span class="number">.10</span>   <span class="comment">// [0, 10]</span></span><br></pre></td></tr></table></figure><h4 id="左闭右开区间"><a href="#左闭右开区间" class="headerlink" title="左闭右开区间"></a>左闭右开区间</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> range = <span class="number">0</span> until <span class="number">10</span>   <span class="comment">// [0, 10)</span></span><br></pre></td></tr></table></figure><h4 id="降序闭区间"><a href="#降序闭区间" class="headerlink" title="降序闭区间"></a>降序闭区间</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> range = <span class="number">10</span> downTo <span class="number">0</span>   <span class="comment">// [10, 0]</span></span><br></pre></td></tr></table></figure><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h4 id="for-in-循环"><a href="#for-in-循环" class="headerlink" title="for - in 循环"></a>for - in 循环</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 输出 0~9</span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span> until <span class="number">10</span>) &#123;</span><br><span class="line">    println(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每次循环 i+=2</span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0.</span><span class="number">.10</span> step <span class="number">2</span>) &#123;</span><br><span class="line">    println(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出 0~10 内的偶数</span></span><br></pre></td></tr></table></figure><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>Kotlin中有主次构造函数之分。</p><p>主构造函数没有函数体，直接定义在类名的后面。若想在主构造函数中编写一些逻辑，将代码写在<code>init</code>中：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="keyword">val</span> name, <span class="keyword">val</span> grade) &#123;</span><br><span class="line">    <span class="keyword">init</span> &#123;</span><br><span class="line">        <span class="comment">// 主构造函数的逻辑写在这里</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Student(<span class="string">&#x27;张三&#x27;</span>, <span class="number">86</span>)</span><br></pre></td></tr></table></figure><p>次构造函数有函数体，且必须调用主构造函数。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="keyword">val</span> name, <span class="keyword">val</span> grade) &#123;</span><br><span class="line">    <span class="keyword">init</span> &#123;</span><br><span class="line">        <span class="comment">// 主构造函数的逻辑写在这里</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">constructor</span>(name: String) : <span class="keyword">this</span>(name, <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 次构造函数逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Student(<span class="string">&#x27;张三&#x27;</span>, <span class="number">86</span>)</span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>Kotlin中非抽象类默认都是不可以被继承的，相当于给类加上了<code>final</code>。要声明为可继承类，需要加上<code>open</code>关键字。</p><p>同时子类中的构造函数必须调用父类中的构造函数。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">class</span> <span class="title class_">Person</span>(<span class="keyword">val</span> name) &#123;</span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="keyword">val</span> name, <span class="keyword">val</span> grade) : Person(name) &#123;</span><br><span class="line">    <span class="keyword">init</span> &#123;</span><br><span class="line">        <span class="comment">// 主构造函数的逻辑写在这里</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Student(<span class="string">&#x27;张三&#x27;</span>, <span class="number">86</span>)</span><br></pre></td></tr></table></figure><h2 id="单例"><a href="#单例" class="headerlink" title="单例"></a>单例</h2><p>Java中实现单例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Singleton</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Singleton</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> Singleton <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> <span class="title class_">Singleton</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">singletonTest</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;singletonTest方法被调用&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">Singleton</span> <span class="variable">singleton</span> <span class="operator">=</span> Singleton.getInstance();</span><br><span class="line">singleton.singletonTest();</span><br></pre></td></tr></table></figure><p>Kotlin中实现单例十分简便，只需要将关键字<code>class</code>改为<code>object</code>即可：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> Singleton &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">singletonTest</span><span class="params">()</span></span> &#123;</span><br><span class="line">        println(<span class="string">&quot;singletonTest is called.&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Singleton.singletonTest()</span><br></pre></td></tr></table></figure><h2 id="拓展函数"><a href="#拓展函数" class="headerlink" title="拓展函数"></a>拓展函数</h2><p>我们可以为某一个数据类型添加自定义的方法。</p><p>举个例子，如对时间进行格式化，一种普通做法是写一个工具类，用伴生对象实现类似静态方法的效果：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DateTimeUtil</span> &#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">val</span> DEFAULT_DATE_FORMAT = <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 格式化时间</span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">format</span><span class="params">(dateTime: <span class="type">LocalDateTime</span>)</span></span>: String &#123;</span><br><span class="line">            <span class="keyword">val</span> formatter = DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)</span><br><span class="line">            <span class="keyword">return</span> formatter.format(dateTime)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> dateTime = LocalDateTime.now()</span><br><span class="line">    println(<span class="string">&quot;<span class="variable">$dateTime</span>&quot;</span>)            <span class="comment">// 2024-03-24T23:07:39</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> formattedDateTime = DateTimeUtil.format(dateTime)</span><br><span class="line">    println(<span class="string">&quot;<span class="variable">$formattedDateTime</span>&quot;</span>)   <span class="comment">// 2024-03-24 23:07:39</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除此之外还有另一种更为优雅的方法：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> LocalDateTime.<span class="title">format</span><span class="params">()</span></span>: String &#123;</span><br><span class="line">    <span class="keyword">val</span> formatter = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> formatter.format(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> dateTime = LocalDateTime.now()</span><br><span class="line">    println(<span class="string">&quot;<span class="variable">$dateTime</span>&quot;</span>)            <span class="comment">// 2024-03-24T23:07:39</span></span><br><span class="line"></span><br><span class="line">    println(dateTime.format())      <span class="comment">// 2024-03-24 23:07:39</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里调用的<code>format</code>函数是我们自定义的。</p><p>kotlin与dart都有这种特性。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Kotlin-与-Java-的关系&quot;&gt;&lt;a href=&quot;#Kotlin-与-Java-的关系&quot; class=&quot;headerlink&quot; title=&quot;Kotlin 与 Java 的关系&quot;&gt;&lt;/a&gt;Kotlin 与 Java 的关系&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Java</summary>
      
    
    
    
    <category term="移动端" scheme="http://princesaoke.github.io/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
    
    <category term="Kotlin" scheme="http://princesaoke.github.io/tags/Kotlin/"/>
    
  </entry>
  
</feed>
